"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DemoResolver__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address payable",
                name: "_lop",
                type: "address",
            },
            {
                internalType: "address",
                name: "_escrowFactory",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "escrow",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "orderHash",
                type: "bytes32",
            },
        ],
        name: "EscrowCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "maker",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "escrow",
                type: "address",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "orderHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "safetyDeposit",
                type: "uint256",
            },
        ],
        name: "SwapExecuted",
        type: "event",
    },
    {
        inputs: [],
        name: "ESCROW_FACTORY",
        outputs: [
            {
                internalType: "contract IEscrowFactory",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "LOP",
        outputs: [
            {
                internalType: "contract LimitOrderProtocol",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "dstImmutables",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "srcCancellationTimestamp",
                type: "uint256",
            },
        ],
        name: "createDstEscrow",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "immutables",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "receiver",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "makerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "takerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "makingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "takingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "MakerTraits",
                        name: "makerTraits",
                        type: "uint256",
                    },
                ],
                internalType: "struct IOrderMixin.Order",
                name: "order",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "vs",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "TakerTraits",
                name: "takerTraits",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "args",
                type: "bytes",
            },
        ],
        name: "executeAtomicSwap",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "orderHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "safetyDeposit",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "maker",
                type: "address",
            },
        ],
        name: "executeSimpleSwap",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "getLockedBalance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "recoverETH",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address payable",
                name: "recipient",
                type: "address",
            },
        ],
        name: "withdrawETH",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x60c03461013257601f610bf938819003918201601f19168301916001600160401b038311848410176101375780849260409485528339810103126101325780516001600160a01b03918282169182900361013257602001519182168092036101325780156100ed5781156100a85760805260a052604051610aab908161014e82396080518181816101cb01526104d9015260a05181818160960152818161018601526103450152f35b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420457363726f77466163746f727920616464726573730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527f496e76616c6964204c4f502061646472657373000000000000000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c9081630614117a1461099057508063224cdb7c146108005780632549e0b1146107e457806336118b52146106fd5780638616e2fd146101fa578063b31798cb146101b5578063be20c1cb146101705763dea024e40361000f5736600319016101208112610169576101001361016d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681610104823b1561016957610124604051809481936337a8093960e21b83526004356004840152602435602484015260443560448401526064356064840152608435608484015260a43560a484015260c43560c484015260e43560e484015280359083015234905af1801561015e57610135575080f35b67ffffffffffffffff811161014a5760405280f35b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b5080fd5b80fd5b503461016d578060031936011261016d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461016d578060031936011261016d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5036600319016102a08112610169576101008091126101695780610103193601126101695767ffffffffffffffff610284351161016957366023610284350112156101695767ffffffffffffffff610284356004013511610169573660246102843560040135610284350101116101695760c43534036106a55760405190810181811067ffffffffffffffff821117610691576040526004358152602435602082015260443560408201526064356060820152608435608082015260a43560a082015260c43560c08201524260e01b60018060e01b0360e435161760e082015260405190637db5ea3f60e11b8252805160048301526020810151602483015260408101516044830152606081015160648301526080810151608483015260a081015160a483015260c081015160c483015260e081015160e48301526020826101048160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa91821561068657839261063e575b508280808060c085015160018060a01b0387165af13d15610639573d67ffffffffffffffff811161062557604051906103b8601f8201601f191660200183610a3d565b81528460203d92013e5b156105e057604051906bffffffffffffffffffffffff198360601b166020830152610284356004013560246102843501603484013761041a603483610284356004013581018783820152036014810185520183610a3d565b60405163f497df7560e01b81526101a461010435600483015281610124918235958660248401526101a061014480356044860152610164803560648701526101849182356084880152853560a48801526101c497883560c48901526101e43560e48901526102043561010489015261022435908801526102443590870152600160fb1b61026435179086015284015280518092840152885b8281106105c95750508181018301889052606092601f909101601f191682018290030181887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156105be5761058f575b506040519060c0906004356001600160a01b0386167f2e51eb252678ae00b7491f29b35873f446f09ee22d616fc60d9db472d87b40818880a301516102443582526020820152600435926001600160a01b039081169216907fdb81ddf191c113dbe3351da50e3cd3c817211e67b383b1a0d813c1110564c99890604090a480f35b606090813d83116105b7575b6105a58183610a3d565b810103126105b3573861050e565b8380fd5b503d61059b565b6040513d87823e3d90fd5b6020828201810151878301870152869450016104b2565b60405162461bcd60e51b815260206004820152601e60248201527f536166657479206465706f736974207472616e73666572206661696c656400006044820152606490fd5b634e487b7160e01b85526041600452602485fd5b6103c2565b9091506020813d60201161067e575b8161065a60209383610a3d565b8101031261067a57516001600160a01b038116810361067a579038610375565b8280fd5b3d915061064d565b6040513d85823e3d90fd5b634e487b7160e01b83526041600452602483fd5b60405162461bcd60e51b815260206004820152602a60248201527f496e76616c6964204554483a206d75737420657175616c207361666574794465604482015269706f736974206f6e6c7960b01b6064820152608490fd5b503461016d57604036600319011261016d576024356001600160a01b038116906004359082900361067a5780159161073583156109f1565b80156107ab5781471061076f5783808080948194878390610766575bf11561075a5780f35b604051903d90823e3d90fd5b506108fc610751565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606490fd5b503461016d578060031936011261016d57602047604051908152f35b50608036600319011261016d576064356001600160a01b0381169060243590604435908390036105b35780820180831161097c573403610919576108458215156109f1565b80156108c6578215610889576040519182526020820152600435917fdb81ddf191c113dbe3351da50e3cd3c817211e67b383b1a0d813c1110564c99860403093a480f35b60405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206d616b6572206164647265737360581b6044820152606490fd5b60405162461bcd60e51b815260206004820152602560248201527f536166657479206465706f736974206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608490fd5b60405162461bcd60e51b815260206004820152603560248201527f496e76616c69642045544820616d6f756e743a206d75737420657175616c20616044820152741b5bdd5b9d080ac81cd859995d1e51195c1bdcda5d605a1b6064820152608490fd5b634e487b7160e01b85526011600452602485fd5b905034610169578160031936011261016957479081156109bb575081808080933382f11561075a5780f35b62461bcd60e51b815260206004820152601160248201527027379022aa24103a37903932b1b7bb32b960791b6044820152606490fd5b156109f857565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b90601f8019910116810190811067ffffffffffffffff821117610a5f57604052565b634e487b7160e01b600052604160045260246000fdfea26469706673582212207a634b6ea950bdc402ebccd1a51d4ee3e792462e3646a4f397def2b2f40b8b5264736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class DemoResolver__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_lop, _escrowFactory, overrides) {
        return super.getDeployTransaction(_lop, _escrowFactory, overrides || {});
    }
    deploy(_lop, _escrowFactory, overrides) {
        return super.deploy(_lop, _escrowFactory, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.DemoResolver__factory = DemoResolver__factory;
DemoResolver__factory.bytecode = _bytecode;
DemoResolver__factory.abi = _abi;
//# sourceMappingURL=DemoResolver__factory.js.map