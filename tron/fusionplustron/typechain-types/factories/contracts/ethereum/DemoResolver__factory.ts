/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DemoResolver,
  DemoResolverInterface,
} from "../../../contracts/ethereum/DemoResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_lop",
        type: "address",
      },
      {
        internalType: "address",
        name: "_escrowFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "escrow",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "safetyDeposit",
        type: "uint256",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "ESCROW_FACTORY",
    outputs: [
      {
        internalType: "contract IEscrowFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LOP",
    outputs: [
      {
        internalType: "contract LimitOrderProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "safetyDeposit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
    ],
    name: "executeSwap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLockedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoverETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03461011c57601f6105af38819003918201601f19168301916001600160401b0383118484101761012157808492604094855283398101031261011c5780516001600160a01b03918282169182900361011c576020015191821680920361011c5780156100d75781156100925760805260a052604051610477908161013882396080518160ce015260a0518160870152f35b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420457363726f77466163746f727920616464726573730000006044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527f496e76616c6964204c4f502061646472657373000000000000000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260049182361015610022575b505050361561002057600080fd5b005b600092833560e01c9182630614117a1461038e575081631efaa7a6146102025781632549e0b1146101e757816336118b52146100fd57508063b31798cb146100ba5763be20c1cb146100745780610012565b346100b657816003193601126100b657517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b50346100b657816003193601126100b657517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9050346101e357816003193601126101e3578035906024356001600160a01b03811691908290036101df5782159061013582156103f5565b82156101a85783471061016e5750848093819382938390610165575bf11561015b575080f35b51903d90823e3d90fd5b506108fc610151565b606490602086519162461bcd60e51b83528201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152fd5b606490602086519162461bcd60e51b83528201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152fd5b8480fd5b8280fd5b5050346100b657816003193601126100b65751478152602090f35b905060803660031901126101e357602435906064356001600160a01b03811691906044359083900361038a57808401808511610377573403610316576102498415156103f5565b80156102c557821561028a57907fdb81ddf191c113dbe3351da50e3cd3c817211e67b383b1a0d813c1110564c998918551948552602085015235933093a480f35b845162461bcd60e51b81526020818401526015602482015274496e76616c6964206d616b6572206164647265737360581b6044820152606490fd5b845162461bcd60e51b8152602081840152602560248201527f536166657479206465706f736974206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608490fd5b845162461bcd60e51b8152602081840152603560248201527f496e76616c69642045544820616d6f756e743a206d75737420657175616c20616044820152741b5bdd5b9d080ac81cd859995d1e51195c1bdcda5d605a1b6064820152608490fd5b634e487b7160e01b875260118352602487fd5b8580fd5b909150346103f157836003193601126103f157479182156103bc57505082808080933382f11561015b575080f35b62461bcd60e51b8252602090820152601160248201527027379022aa24103a37903932b1b7bb32b960791b6044820152606490fd5b8380fd5b156103fc57565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fdfea264697066735822122021f9e8406742a630958313c41b6ec6d53c5107212dbf99b8012327b007b7a3f264736f6c63430008170033";

type DemoResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DemoResolver__factory extends ContractFactory {
  constructor(...args: DemoResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _lop: AddressLike,
    _escrowFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_lop, _escrowFactory, overrides || {});
  }
  override deploy(
    _lop: AddressLike,
    _escrowFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_lop, _escrowFactory, overrides || {}) as Promise<
      DemoResolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DemoResolver__factory {
    return super.connect(runner) as DemoResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoResolverInterface {
    return new Interface(_abi) as DemoResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DemoResolver {
    return new Contract(address, _abi, runner) as unknown as DemoResolver;
  }
}
