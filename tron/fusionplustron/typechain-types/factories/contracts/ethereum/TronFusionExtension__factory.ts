/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TronFusionExtension,
  TronFusionExtensionInterface,
} from "../../../contracts/ethereum/TronFusionExtension";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_limitOrderProtocol",
        type: "address",
      },
      {
        internalType: "address",
        name: "_escrowFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EscrowCreationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientSafetyDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimelock",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTronAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTronData",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyLimitOrderProtocol",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "escrowAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "secretHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "safetyDeposit",
        type: "uint256",
      },
    ],
    name: "EthEscrowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "tronFactory",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "secretHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "trxAmount",
        type: "uint256",
      },
    ],
    name: "TronEscrowRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "trxAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "secretHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tronRecipient",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "srcEscrowAddress",
        type: "address",
      },
    ],
    name: "TronSwapInitiated",
    type: "event",
  },
  {
    inputs: [],
    name: "ESCROW_FACTORY",
    outputs: [
      {
        internalType: "contract IEscrowFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIMIT_ORDER_PROTOCOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_TIMELOCK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_TIMELOCK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRX_REPRESENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "deactivateSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "getExpectedTrxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "getSrcEscrowAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "getTronRecipient",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "getTronSwapData",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "tronRecipient",
            type: "string",
          },
          {
            internalType: "string",
            name: "tronFactory",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "expectedTrxAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "secretHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "timelock",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "tronChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct TronFusionExtension.TronSwapData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "hasActiveTronSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderSwapData",
    outputs: [
      {
        internalType: "string",
        name: "tronRecipient",
        type: "string",
      },
      {
        internalType: "string",
        name: "tronFactory",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expectedTrxAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "secretHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "timelock",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "tronChainId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderToSrcEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "receiver",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "makerAsset",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "takerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "MakerTraits",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "postInteraction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "rescueETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461011e57601f6112c438819003918201601f19168301916001600160401b0383118484101761012357808492604094855283398101031261011e57610052602061004b83610139565b9201610139565b33156101055760008054336001600160a01b03198216811783556040516001600160a01b03959390928616907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180558382161580156100fb575b6100ec57506080521660a052604051611176908161014e823960805181818161025f015261056b015260a0518181816102a401526109760152f35b630519ab5160e51b8152600490fd5b50838316156100b1565b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361011e5756fe608080604052600436101561001357600080fd5b60003560e01c90816303e029ac14610f14575080630477774b146104c457806317cf977714610de95780633b7b6c0414610db55780634542a3b714610d71578063462ebde2146104f857806348bbb919146104c457806369a84dfb14610495578063715018a61461043c5780637465f060146104055780638cd4426d1461036b5780638da5cb5b1461034257806394f1825b146103245780639e252f00146102d3578063be20c1cb1461028e578063c145938414610249578063d65870ce146101a2578063f2fde38b146101125763fb0c7549146100f057600080fd5b3461010d57600036600319011261010d576020604051610e108152f35b600080fd5b3461010d57602036600319011261010d576004356001600160a01b038181169182900361010d57610141611114565b811561018957600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3461010d57602036600319011261010d57600435600052600260205261021b60406000206101cf81611019565b906101dc60018201611019565b60028201549160038101546001600160401b036004830154169061022960ff60066005860154950154169460405198899860e08a5260e08a0190610f51565b9088820360208a0152610f51565b9460408701526060860152608085015260a0840152151560c08301520390f35b3461010d57600036600319011261010d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461010d57600036600319011261010d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461010d57602036600319011261010d5760008080806004356102f4611114565b81546001600160a01b031682821561031b575bf11561030f57005b6040513d6000823e3d90fd5b506108fc610307565b3461010d57600036600319011261010d576020604051620151808152f35b3461010d57600036600319011261010d576000546040516001600160a01b039091168152602090f35b3461010d57604036600319011261010d576004356001600160a01b03808216820361010d576000604460209261039f611114565b825460405163a9059cbb60e01b815291166004820152602480359082015282855af190816103e2575b50156103d057005b60405163fb7f507960e01b8152600490fd5b90503d156103fd5750600160005114601f3d11165b816103c8565b3b15156103f7565b3461010d57602036600319011261010d5761041e611114565b6004356000908152600260205260409020600601805460ff19169055005b3461010d57600036600319011261010d57610455611114565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461010d57602036600319011261010d5760043560005260026020526020600260406000200154604051908152f35b3461010d57602036600319011261010d576004356000526003602052602060018060a01b0360406000205416604051908152f35b3461010d5736600319016101e0811261010d576101001361010d57610104356001600160401b03811161010d57610533903690600401610f76565b5050610144356001600160a01b038116810361010d576101c4356001600160401b03811161010d57610569903690600401610f76565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610d5f57600260015414610d4d57600260015581019060208183031261010d578035906001600160401b03821161010d570160e08183031261010d57604051916105de83610fdd565b81356001600160401b03811161010d57816105fa9184016110be565b83526020820135906001600160401b03821161010d5761061b9183016110be565b602083015260408101356040830152606081013560608301526080810135906001600160401b038216820361010d5760c091608084015260a081013560a08401520135801515810361010d5760c08201528051518015908115610d42575b50610d305760208101515115610ce2576001600160401b03608082015116610e108110908115610d23575b50610d11576040810151158015610d06575b610cf457606081015115610ce25763cd8690dc60a082015103610ce2576000196084356001600160a01b031601610ce25761012435600052600260205260406000209080519283516001600160401b038111610b39576107168454610fa3565b601f8111610c9e575b506020601f8211600114610c35578192939495600092610c2a575b50508160011b916000199060031b1c19161783555b60208201519283516001600160401b038111610b39576107726001830154610fa3565b601f8111610be3575b506020601f8211600114610b705781906006949596600092610b65575b50508160011b916000199060031b1c19161760018201555b6040840151600282015560608401516003820155600481016001600160401b036080860151166001600160401b031982541617905560a084015160058201550160c083015115159060ff199160ff838354169116179055610124356000526002602052600160066040600020019182541617905560608201519060808301516001600160401b0381166001600160401b03610e10820111610b4f576001600160401b0361012b19820111610b4f5760405193846101008101106001600160401b0361010087011117610b39576101008501604052610124358552602085019081526040850160243581526060860160018060a01b03861681526080870191606435835260a08801936101643585527503840000012c0000000000000000000007080000025860c08a01966000885260e08b01986fffffffffffffffff00000000000000006001600160401b0360c01b61012b19840160c01b1692610e106001600160401b0360601b910160601b169160401b16171717875260405198637db5ea3f60e11b8a525160048a01525160248901525160448801525160648701525160848601525160a48501525160c48401525160e48301526020826101048160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa91821561030f57600092610af5575b5061012435600052600360205260406000209160018060a01b031691826bffffffffffffffffffffffff60a01b8254161790556040830151610a0f6060850151855190604051936101643585526020850152604084015260a0606084015260a0830190610f51565b608082018490526001600160a01b0392831692602435169161012435917fb652771d7192b76686888373f0d18ec204b46d40761fb0b5bc3c8c4023777c30919081900390a4606082015190604051610164358152600060208201527f8a5690ce8179343bacf4c1068b2068bf8f0835327dceda7d7700250d89433f3560406101243592a46020810151610aba6040606084015193015191602060405192828480945193849201610f2e565b8101039020906040519081527f288fcca23dee36be34c459dc47baa337e64e466769870815a779e44f13e2da1860206101243592a460018055005b9091506020813d602011610b31575b81610b1160209383610ff8565b8101031261010d57516001600160a01b038116810361010d5790836109a7565b3d9150610b04565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b015190508680610798565b6001830160005260206000209560005b601f1984168110610bcb57509582916006959697600194601f19811610610bb2575b505050811b0160018201556107b0565b015160001960f88460031b161c19169055868080610ba2565b82820151885560019097019660209283019201610b80565b600183016000526020600020601f830160051c810160208410610c23575b601f830160051c82018110610c1757505061077b565b60008155600101610c01565b5080610c01565b01519050858061073a565b8460005260206000209060005b601f1984168110610c86575060019394959683601f19811610610c6d575b505050811b01835561074f565b015160001960f88460031b161c19169055858080610c60565b9091602060018192858b015181550193019101610c42565b846000526020600020601f830160051c810160208410610cdb575b601f830160051c82018110610ccf57505061071f565b60008155600101610cb9565b5080610cb9565b604051630519ab5160e51b8152600490fd5b60405163162908e360e11b8152600490fd5b5061016435156106b6565b604051637c68874160e11b8152600490fd5b62015180915011836106a4565b60405163aea60ac160e01b8152600490fd5b602291501183610679565b604051633ee5aeb560e01b8152600490fd5b60405163692d508360e11b8152600490fd5b3461010d57602036600319011261010d576004356000526002602052610db1610d9d6040600020611019565b604051918291602083526020830190610f51565b0390f35b3461010d57602036600319011261010d576004356000526002602052602060ff600660406000200154166040519015158152f35b3461010d5760208060031936011261010d5760e090600060c0604051610e0e81610fdd565b606081526060848201528260408201528260608201528260808201528260a0820152015260043560005260028152604060002060405191610e4e83610fdd565b610e5782611019565b8352610e6560018301611019565b9181840192835260028101549260408501938452600382015490606086019182526001600160401b0391610eee836004860154169260808901938452610edb60ff600660058901549860a08d01998a520154169760c08b0198151589526040519b8c9b828d5251918c01526101008b0190610f51565b9051898203601f190160408b0152610f51565b95516060880152516080870152511660a08501525160c084015251151560e08301520390f35b3461010d57600036600319011261010d5780600160209252f35b60005b838110610f415750506000910152565b8181015183820152602001610f31565b90602091610f6a81518092818552858086019101610f2e565b601f01601f1916010190565b9181601f8401121561010d578235916001600160401b03831161010d576020838186019501011161010d57565b90600182811c92168015610fd3575b6020831014610fbd57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610fb2565b60e081019081106001600160401b03821117610b3957604052565b90601f801991011681019081106001600160401b03821117610b3957604052565b9060405191826000825461102c81610fa3565b9081845260209460019160018116908160001461109c575060011461105d575b50505061105b92500383610ff8565b565b600090815285812095935091905b81831061108457505061105b935082010138808061104c565b8554888401850152948501948794509183019161106b565b9250505061105b94925060ff191682840152151560051b82010138808061104c565b81601f8201121561010d578035906001600160401b038211610b3957604051926110f2601f8401601f191660200185610ff8565b8284526020838301011161010d57816000926020809301838601378301015290565b6000546001600160a01b0316330361112857565b60405163118cdaa760e01b8152336004820152602490fdfea264697066735822122064ae8a0884ffb75edd880926e361ec1eac94cc16772f62eaa9af760c9b26775764736f6c63430008170033";

type TronFusionExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TronFusionExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TronFusionExtension__factory extends ContractFactory {
  constructor(...args: TronFusionExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _limitOrderProtocol: AddressLike,
    _escrowFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _limitOrderProtocol,
      _escrowFactory,
      overrides || {}
    );
  }
  override deploy(
    _limitOrderProtocol: AddressLike,
    _escrowFactory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _limitOrderProtocol,
      _escrowFactory,
      overrides || {}
    ) as Promise<
      TronFusionExtension & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TronFusionExtension__factory {
    return super.connect(runner) as TronFusionExtension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TronFusionExtensionInterface {
    return new Interface(_abi) as TronFusionExtensionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TronFusionExtension {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TronFusionExtension;
  }
}
