"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseEscrowFactory__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "AccessDenied",
        type: "error",
    },
    {
        inputs: [],
        name: "FailedDeployment",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "needed",
                type: "uint256",
            },
        ],
        name: "InsufficientBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InsufficientEscrowBalance",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCreationTime",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidPartialFill",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidProof",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidSecretsAmount",
        type: "error",
    },
    {
        inputs: [],
        name: "ResolverCanNotFillOrder",
        type: "error",
    },
    {
        inputs: [],
        name: "SafeTransferFromFailed",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "escrow",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "hashlock",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "Address",
                name: "taker",
                type: "uint256",
            },
        ],
        name: "DstEscrowCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct IBaseEscrow.Immutables",
                name: "srcImmutables",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "chainId",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct IEscrowFactory.DstImmutablesComplement",
                name: "dstImmutablesComplement",
                type: "tuple",
            },
        ],
        name: "SrcEscrowCreated",
        type: "event",
    },
    {
        inputs: [],
        name: "ACCESS_TOKEN",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "ESCROW_DST_IMPLEMENTATION",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "ESCROW_SRC_IMPLEMENTATION",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "FEE_TOKEN",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "LIMIT_ORDER_PROTOCOL",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "OWNER",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "immutables",
                type: "tuple",
            },
        ],
        name: "addressOfEscrowDst",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "immutables",
                type: "tuple",
            },
        ],
        name: "addressOfEscrowSrc",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "dstImmutables",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "srcCancellationTimestamp",
                type: "uint256",
            },
        ],
        name: "createDstEscrow",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "lastValidated",
        outputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "leaf",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "receiver",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "makerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "takerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "makingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "takingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "MakerTraits",
                        name: "makerTraits",
                        type: "uint256",
                    },
                ],
                internalType: "struct IOrderMixin.Order",
                name: "order",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "extension",
                type: "bytes",
            },
            {
                internalType: "bytes32",
                name: "orderHash",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "taker",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "makingAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "takingAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "remainingMakingAmount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
            },
        ],
        name: "postInteraction",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "receiver",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "makerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "takerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "makingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "takingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "MakerTraits",
                        name: "makerTraits",
                        type: "uint256",
                    },
                ],
                internalType: "struct IOrderMixin.Order",
                name: "",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "extension",
                type: "bytes",
            },
            {
                internalType: "bytes32",
                name: "orderHash",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
            },
        ],
        name: "takerInteraction",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class BaseEscrowFactory__factory {
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.BaseEscrowFactory__factory = BaseEscrowFactory__factory;
BaseEscrowFactory__factory.abi = _abi;
//# sourceMappingURL=BaseEscrowFactory__factory.js.map