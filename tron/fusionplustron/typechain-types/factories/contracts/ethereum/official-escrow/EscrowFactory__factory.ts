/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  EscrowFactory,
  EscrowFactoryInterface,
} from "../../../../contracts/ethereum/official-escrow/EscrowFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "limitOrderProtocol",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "rescueDelaySrc",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "rescueDelayDst",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientEscrowBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCreationTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPartialFill",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecretsAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "ResolverCanNotFillOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFromFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "escrow",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "Address",
        name: "taker",
        type: "uint256",
      },
    ],
    name: "DstEscrowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IBaseEscrow.Immutables",
        name: "srcImmutables",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IEscrowFactory.DstImmutablesComplement",
        name: "dstImmutablesComplement",
        type: "tuple",
      },
    ],
    name: "SrcEscrowCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCESS_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ESCROW_DST_IMPLEMENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ESCROW_SRC_IMPLEMENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIMIT_ORDER_PROTOCOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "addressOfEscrowDst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "addressOfEscrowSrc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "dstImmutables",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "srcCancellationTimestamp",
        type: "uint256",
      },
    ],
    name: "createDstEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "lastValidated",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "receiver",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "makerAsset",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "takerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "MakerTraits",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "extension",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remainingMakingAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "postInteraction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "receiver",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "makerAsset",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "takerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "MakerTraits",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "extension",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "takerInteraction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101a034620002b4576001600160401b03601f6200259438819003918201601f191684019190838311858410176200029e578160c09286926040958652833981010312620002b4576200005283620002b9565b926200006160208201620002b9565b906200006f838201620002b9565b936200007e60608301620002b9565b6200009a60a06200009260808601620002ce565b9401620002ce565b938760805260a0528560c05260e052610100958652835191610ba780840190848210848311176200029e578492620000f4928992620019ed863963ffffffff90911681526001600160a01b03909116602082015260400190565b0360009283f094851562000294576001600160a01b03958616610120908152855190969490926108fb808501918211858310176200028057918493916200015b93620010f2863963ffffffff90911681526001600160a01b03909116602082015260400190565b039082f0908115620002755750816101409116815262000204620001bb83865116763d602d80600a3d3981f3363d3d373d3d3d363d73000000906e5af43d82803e903d91602b57fd5bf36020528060115260881c17600052603760092090565b92610160938452825116763d602d80600a3d3981f3363d3d373d3d3d363d73000000906e5af43d82803e903d91602b57fd5bf36020528060115260881c17600052603760092090565b926101809384525193610e119586620002e1873960805186818161035a01526106f7015260a05186610661015260c05186610ace015260e05186610b10015251856104360152518481816106a601526109570152518381816101bf01526103ec0152518260cc015251816103b10152f35b8351903d90823e3d90fd5b634e487b7160e01b86526041600452602486fd5b84513d84823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b0382168203620002b457565b519063ffffffff82168203620002b45756fe6080806040526004908136101561001557600080fd5b60003560e01c908163117803e314610afd575080633eb5002a14610ab8578063462ebde2146106d55780637040f1731461069057806373717b081461064b578063acf4ce5c14610617578063adf38ba11461041b578063ba551177146103d6578063be58e91c14610389578063c145938414610344578063dea024e4146101085763fb6bd47e146100a557600080fd5b3461010357610100908160031936011261010357816100f1916020936040519182372030907f000000000000000000000000000000000000000000000000000000000000000090610db2565b6040516001600160a01b039091168152f35b600080fd5b503660031901610120811261010357610100809112610103576001600160a01b0360843581811680159491939260c4358087610332575b3403610321576040519461015286610c21565b8435865260243595866020820152604435604082015260643597886060830152608082015260a081019260a435845260c08201524260e01b60018060e01b0360e43516178060e08301526101b7610104359163ffffffff8160c01c169060e01c610c60565b1161031057207f00000000000000000000000000000000000000000000000000000000000000003447106102f35780763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff6e5af43d82803e903d91602b57fd5bf39360881c161760005260781b176020526037600934f59182169687156102e25715610271575b7fc30e111dcc74fddc2c3a4d98ffb97adec4485c0a687946bf5b22c2a99c7ff96d606088888860405192835260208301526040820152a1005b606460209260009251604051916323b872dd60e01b835233888401526024830152604482015282855af190816102bf575b50156102b057808080610238565b60405163f405907160e01b8152fd5b90503d156102da5750600160005114601f3d11165b386102a2565b3b15156102d4565b60405163b06ebf3d60e01b81528590fd5b60405163cf47918160e01b81524781880152346024820152604490fd5b604051637a42074b60e11b81528690fd5b6040516334f5151d60e01b81528490fd5b61033f9060a43590610c60565b61013f565b34610103576000366003190112610103576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461010357610100908160031936011261010357816100f1916020936040519182372030907f000000000000000000000000000000000000000000000000000000000000000090610db2565b34610103576000366003190112610103576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101035761042a36610b6d565b509897509395935050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633039050610606579061047091610d67565b60408051602080820195865292909301609f190135601081901b61ffff1916918401919091526001600160f01b03949193908516926104bc81605e81015b03601f198101835282610c3e565b519020918535601e19873603018112156101035767ffffffffffffffff959087018035878111610103576005918160051b360388820113610103576040888b01359a0135986040518981019167ffffffffffffffff60c01b8d60c01b1683528b6028830152602882526060820190828210908211176105f1576040525190209260009291905b8284106105b1575050505016036105a2576001850180951161058d5750600192916000916040519561057387610bef565b865281860193845282525260406000209251835551910155005b601190634e487b7160e01b6000525260246000fd5b6040516309bde33960e01b8152fd5b909192938985831b84010135908181106000146105df576000528952600160406000205b9401929190610542565b906000528952600160406000206105d5565b604189634e487b7160e01b6000525260246000fd5b604051634ca8886760e01b81528490fd5b5034610103576020366003190112610103573560005260006020526040806000206001815491015482519182526020820152f35b34610103576000366003190112610103576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610103576000366003190112610103576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610103576106e436610b6d565b9397509497955060018060a09593951b037f0000000000000000000000000000000000000000000000000000000000000000163303610a7457609f198381810111610a5f578584010160e0870135600160fe1b1615610a5757358060f01c60028110610a465760408051602081018c815260109490941b61ffff1916918101919091526107b4929061077981605e81016104ae565b5190206000526000602052604060002090602060405161079881610bef565b6001845494858352015491829101529360a08a0135908b610cc3565b15610a35575b604051976107c789610c21565b885260208801526020850135604088015260018060a01b03166060870152606084013560808701528460a0870152603f19818401013560801c60c08701524260e01b60018060e01b03601f198386010135161760e0870152604084013560018060a01b03811615600014610a2f57506020840135925b604051938460a081011067ffffffffffffffff60a0870111176105f157917f0e534c62f0afd2fa0f0fa71198e8aa2d549f24daf2bb47de0d5486c7ce9288ca93916101a09360a0870160405286526020860192835260408601605f198383010135815260608701916fffffffffffffffffffffffffffffffff603f1985830101351683526080880193607f19910101358352604051938a51855260208b0151602086015260408b0151604086015260608b0151606086015260808b0151608086015260a08b015160a086015260c08b015160c086015260e08b015160e086015261010097518886015251610120850152516101408401525161016083015251610180820152a183206e5af43d82803e903d91602b57fd5bf37f0000000000000000000000000000000000000000000000000000000000000000763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c161760005260781b17602052603760096000f5926001600160a01b038416156102e25760c08431910151119283156109e1575b5050506109d257005b6040516334f5151d60e01b8152fd5b6370a0823160e01b6000908152908552919250602091906024908290606001356001600160a01b03165afa600051901560203d1017610a2357103880806109c9565b6040513d6000823e3d90fd5b9261083d565b604051633aace85d60e21b81528990fd5b6040516310d629d360e01b81528b90fd5b9050356107ba565b60118a634e487b7160e01b6000525260246000fd5b60405162461bcd60e51b81526020818b0152601b60248201527f42617365457874656e73696f6e3a20756e617574686f72697a656400000000006044820152606490fd5b34610103576000366003190112610103576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610103576000366003190112610103577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9181601f840112156101035782359167ffffffffffffffff8311610103576020838186019501011161010357565b60031981016101e0811261010357610100136101035760049167ffffffffffffffff610104358181116101035783610ba791600401610b3f565b909390926101243592610144356001600160a01b03811681036101035792610164359261018435926101a435926101c43591821161010357610beb91600401610b3f565b9091565b6040810190811067ffffffffffffffff821117610c0b57604052565b634e487b7160e01b600052604160045260246000fd5b610100810190811067ffffffffffffffff821117610c0b57604052565b90601f8019910116810190811067ffffffffffffffff821117610c0b57604052565b91908201809211610c6d57565b634e487b7160e01b600052601160045260246000fd5b91908203918211610c6d57565b81810292918115918404141715610c6d57565b8115610cad570490565b634e487b7160e01b600052601260045260246000fd5b929190610cd984610cd48385610c83565b610c60565b6000199190828101908111610c6d5783610cf686610cfb93610c90565b610ca3565b948103610d15575050505060028101809111610c6d571490565b808303610d30575b5050505060018101809111610c6d571490565b610d3a9083610c83565b908101908111610c6d57610d5192610cf691610c90565b8114610d605738808080610d1d565b5050600090565b91909160208310610da95780359063ffffffff8260c01c169160e01c93601f19018411610d98578101602001920390565b6309605a0160e41b60005260046000fd5b50600091508190565b91600b92604051926040840152602083015281520160ff8153605590206001600160a01b03169056fea2646970667358221220c3eec43f8c6f4665500aee885633e7255bdedac86dad22d515160993d06d0f1664736f6c634300081700336101003461010f57601f6108fb38819003918201601f19168301916001600160401b0383118484101761011457808492604094855283398101031261010f5780519063ffffffff821680920361010f5760200151906001600160a01b038216820361010f573360c05260a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c17600052603760092060e0526040516107d0908161012b82396080518161043b015260a051818181608a015261028d015260c0518181816101190152818161025701528181610377015261059a015260e05181818160ef0152818161022d0152818161033e01526105700152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e08435811c9283630af975581461040f5750826323305703146103a65782632dd310001461036157826334862b6a146103255782634649088b146101d05750816390d3252f146100b1575063f56cd69c1461007457600080fd5b346100ad57816003193601126100ad57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b8383346100ad57610100806003193601126101cc576001600160a01b0391606435831691338390036101bc576055600b85928451818a8237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036101ad5761015260e43561066f565b421061019e57509061016b9160a435916084351661069f565b61017760c43533610724565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b516337bf561360e11b81528490fd5b51635134a42560e11b81528490fd5b81516348f5c3ed60e01b81528690fd5b8280fd5b838591346101cc576101403660031901126101cc578335936001600160a01b038086169290919083870361032157602435926101008060431936011261031d578160a43516330361030d57600b60559188518160448237208851907f00000000000000000000000000000000000000000000000000000000000000008a83015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036102fe5761012435901c7f00000000000000000000000000000000000000000000000000000000000000000142106102f057506102e2817fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac9596339061069f565b82519182526020820152a180f35b83516337bf561360e11b8152fd5b508351635134a42560e11b8152fd5b86516348f5c3ed60e01b81528490fd5b8780fd5b8580fd5b505050346100ad57816003193601126100ad57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505050346100ad57816003193601126100ad57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b838591346101cc576103b7366104e4565b92909160608401356001600160a01b031633036101bc5763ffffffff8185013580921c9160801c1681018091116103fc57421061019e5750906103f991610544565b80f35b634e487b7160e01b855260118652602485fd5b90859185346104e057610421366104e4565b6370a0823160e01b845233878501529390926020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156104d65786916104a4575b50156101bc5763ffffffff8185013580921c9160a01c1681018091116103fc57421061019e5750906103f991610544565b90506020813d6020116104ce575b816104bf6020938361050c565b81010312610321575187610473565b3d91506104b2565b83513d88823e3d90fd5b8380fd5b906101206003198301126105075761010060043592602319011261050757602490565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761052e57604052565b634e487b7160e01b600052604160045260246000fd5b9061055260e082013561066f565b42101561065d576040906055600b83516101009081858237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153206001600160a01b03908116300361064c5783600052602060002060208301350361063b579161063460c08361062c60209660a07fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc1710599970135908087850135169060808501351661069f565b013533610724565b51908152a1565b825163abab6bd760e01b8152600490fd5b8251635134a42560e11b8152600490fd5b6040516337bf561360e11b8152600490fd5b63ffffffff8160e01c9160c01c1681018091116106895790565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03169190826106bb576106b99250610724565b565b9060446020926000926040519163a9059cbb60e01b83526004830152602482015282855af19081610701575b50156106ef57565b60405163fb7f507960e01b8152600490fd5b90503d1561071c5750600160005114601f3d11165b386106e7565b3b1515610716565b60008080809481945af1903d15610794573d9067ffffffffffffffff8211610780576040519161075e601f8201601f19166020018461050c565b825260203d92013e5b1561076e57565b604051638a0332d560e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b5061076756fea26469706673582212202ca841ffd841c496045f91eab03a19363ed8b2a84c860731250d14ba4b2cb1ab64736f6c634300081700336101003461011757601f610ba738819003918201601f19168301916001600160401b0383118484101761011c5780849260409485528339810103126101175780519063ffffffff82168092036101175760200151906001600160a01b0382168203610117573360c05260a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c17600052603760092060e052604051610a749081610133823960805181818161010001526105ea015260a05181818160a101526103cf015260c0518181816104c00152818161081d015281816108aa0152610924015260e051818181610487015281816107f20152818161087f01526108f90152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e0908435821c9283630af97558146105b15750826323305703146104ef5782632dd31000146104aa57826334862b6a1461046e5782634649088b146103795782636c10c0c81461027357826390d3252f1461021b578263daff233e146100c857505063f56cd69c1461008b57600080fd5b346100c457816003193601126100c457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b91509134610217576101003660031901126102175780516370a0823160e01b815233838201526001600160a01b0393906020816024817f000000000000000000000000000000000000000000000000000000000000000089165afa90811561020d5786916101d7575b50156101c95763ffffffff60e43580921c9160601c1681018091116101b65742106101a957836101768461016361086a565b60a435908060443516906084351661095f565b61018260c435336109c8565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b516337bf561360e11b8152fd5b634e487b7160e01b855260118352602485fd5b50516348f5c3ed60e01b8152fd5b90506020813d602011610205575b816101f26020938361075e565b81010312610201575138610131565b8580fd5b3d91506101e5565b83513d88823e3d90fd5b8380fd5b9150503461026f5761010036600319011261026f576001600160a01b0391606435831633036102625761024f60e435610796565b42106101a957836101768461016361086a565b516348f5c3ed60e01b8152fd5b8280fd5b8490843461026f5761014036600319011261026f578135916001600160a01b039060243590828216820361020157610100366043190112610201578260a43516330361036b57610124356102c6816107c6565b421061035c576102d590610796565b42101561034e576102e46107dd565b848652602086206064350361034057509161032b7fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105949260209460e4359160c4351661095f565b61033861010435336109c8565b51908152a180f35b835163abab6bd760e01b8152fd5b83516337bf561360e11b8152fd5b5083516337bf561360e11b8152fd5b83516348f5c3ed60e01b8152fd5b8484833461026f5761014036600319011261026f576001600160a01b038435818116929083900361046a57602435916101003660431901126102015760a43516330361045a576103c76107dd565b61012435901c7f000000000000000000000000000000000000000000000000000000000000000001421061044a577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac939450811560001461043a5761042c81336109c8565b82519182526020820152a180f35b61044581338461095f565b61042c565b82516337bf561360e11b81528590fd5b83516348f5c3ed60e01b81528690fd5b8480fd5b505050346100c457816003193601126100c457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505050346100c457816003193601126100c457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b929150346102175761050036610736565b909390916001600160a01b0391906060840135831633036105a257830135610527816107c6565b421061035c5761053690610796565b42101561034e57610546836108e5565b8486526020862060208401350361034057509161033860c08361059a60209660a07fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171059997013590339060808501351661095f565b0135336109c8565b5083516348f5c3ed60e01b8152fd5b85918534610217576105c236610736565b6370a0823160e01b855233858501529560209491936001600160a01b039290919086816024817f000000000000000000000000000000000000000000000000000000000000000088165afa90811561072c5788916106fb575b50156106ec578088013580911c63ffffffff82881c1681018091116106d95742106106ca5761064990610796565b4210156106bc57610659876108e5565b83865284862085880135036106ae575060c08661059a6103389360a07fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105999a013590806060850135169060808501351661095f565b825163abab6bd760e01b8152fd5b82516337bf561360e11b8152fd5b5082516337bf561360e11b8152fd5b634e487b7160e01b885260118352602488fd5b5082516348f5c3ed60e01b8152fd5b90508681813d8311610725575b610712818361075e565b8101031261072157518961061b565b8780fd5b503d610708565b85513d8a823e3d90fd5b906101206003198301126107595761010060043592602319011261075957602490565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761078057604052565b634e487b7160e01b600052604160045260246000fd5b63ffffffff8160e01c9160401c1681018091116107b05790565b634e487b7160e01b600052601160045260246000fd5b63ffffffff8160e01c911681018091116107b05790565b600b60405161010090816044823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153605590206001600160a01b0316300361085857565b604051635134a42560e11b8152600490fd5b600b60405161010090816004823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153605590206001600160a01b0316300361085857565b600b906040516101008092823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153605590206001600160a01b0316300361085857565b9160446020926000926040519163a9059cbb60e01b83526004830152602482015282855af190816109a5575b501561099357565b60405163fb7f507960e01b8152600490fd5b90503d156109c05750600160005114601f3d11165b3861098b565b3b15156109ba565b60008080809481945af1903d15610a38573d9067ffffffffffffffff8211610a245760405191610a02601f8201601f19166020018461075e565b825260203d92013e5b15610a1257565b604051638a0332d560e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b50610a0b56fea2646970667358221220a74e9ef670e9730cc4996a0ed844d369a6676d997ca89ee75a4599270d39a89764736f6c63430008170033";

type EscrowFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowFactory__factory extends ContractFactory {
  constructor(...args: EscrowFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    limitOrderProtocol: AddressLike,
    feeToken: AddressLike,
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelaySrc: BigNumberish,
    rescueDelayDst: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      limitOrderProtocol,
      feeToken,
      accessToken,
      owner,
      rescueDelaySrc,
      rescueDelayDst,
      overrides || {}
    );
  }
  override deploy(
    limitOrderProtocol: AddressLike,
    feeToken: AddressLike,
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelaySrc: BigNumberish,
    rescueDelayDst: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      limitOrderProtocol,
      feeToken,
      accessToken,
      owner,
      rescueDelaySrc,
      rescueDelayDst,
      overrides || {}
    ) as Promise<
      EscrowFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowFactory__factory {
    return super.connect(runner) as EscrowFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowFactoryInterface {
    return new Interface(_abi) as EscrowFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EscrowFactory {
    return new Contract(address, _abi, runner) as unknown as EscrowFactory;
  }
}
