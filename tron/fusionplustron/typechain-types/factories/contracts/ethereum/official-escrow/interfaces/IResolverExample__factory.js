"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IResolverExample__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "InvalidLength",
        type: "error",
    },
    {
        inputs: [],
        name: "LengthMismatch",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "targets",
                type: "address[]",
            },
            {
                internalType: "bytes[]",
                name: "arguments",
                type: "bytes[]",
            },
        ],
        name: "arbitraryCalls",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "dstImmutables",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "srcCancellationTimestamp",
                type: "uint256",
            },
        ],
        name: "deployDst",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "immutables",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "receiver",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "makerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "takerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "makingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "takingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "MakerTraits",
                        name: "makerTraits",
                        type: "uint256",
                    },
                ],
                internalType: "struct IOrderMixin.Order",
                name: "order",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "vs",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "TakerTraits",
                name: "takerTraits",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "args",
                type: "bytes",
            },
        ],
        name: "deploySrc",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IResolverExample__factory {
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IResolverExample__factory = IResolverExample__factory;
IResolverExample__factory.abi = _abi;
//# sourceMappingURL=IResolverExample__factory.js.map