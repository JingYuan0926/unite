"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC20True__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x6080806040523461001657610156908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c8063095ea7b31461008557806323b872dd146100a757806370a082311461008a578063a9059cbb146100855763dd62ed3e1461005457600080fd5b34610082576040366003190112610082576020906100706100d6565b506100796100f1565b50604051908152f35b80fd5b610107565b5034610082576020366003190112610082576020906100796100d6565b5034610082576060366003190112610082576100c16100d6565b506100ca6100f1565b50602060405160018152f35b600435906001600160a01b03821682036100ec57565b600080fd5b602435906001600160a01b03821682036100ec57565b346100ec5760403660031901126100ec576100ca6100d656fea264697066735822122078402686dfc1c3aa4faa4e9d1136ac260f6dbc9ec0f3fc6650b3043c337e600e64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class ERC20True__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ERC20True__factory = ERC20True__factory;
ERC20True__factory.bytecode = _bytecode;
ERC20True__factory.abi = _abi;
//# sourceMappingURL=ERC20True__factory.js.map