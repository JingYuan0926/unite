/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  EscrowDstZkSync,
  EscrowDstZkSyncInterface,
} from "../../../../../contracts/ethereum/official-escrow/zkSync/EscrowDstZkSync";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "rescueDelay",
        type: "uint32",
      },
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidImmutables",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecret",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTime",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokenSendingFailure",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EscrowCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "EscrowWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsRescued",
    type: "event",
  },
  {
    inputs: [],
    name: "FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROXY_BYTECODE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESCUE_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "publicWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61012034610152576001600160401b0390601f61099b38819003918201601f19168301918483118484101761013c5780849260409485528339810103126101525780519063ffffffff82168092036101525760200151906001600160a01b0382168203610152573360c05260a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c17600052603760092060e05260405160208101903082526020815260408101928184109084111761013c5782604052519020906101009182526108439182610158833960805182610488015260a051828181608a01526102da015260c05182818161010e01528181610274015281816103c401526105de015260e0518261038b01525181818161013d015281816102a3015261060d0152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b60009260e08435811c9283630af975581461045c5750826323305703146103f35782632dd31000146103ae57826334862b6a146103725782634649088b146101f65750816390d3252f146100b1575063f56cd69c1461007457600080fd5b346100ad57816003193601126100ad57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b8383346100ad57610100806003193601126101f2576001600160a01b0391606435831691338390036101e25781518187823720303f8251917f2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca49483527f000000000000000000000000000000000000000000000000000000000000000060208401528383015260608201527f000000000000000000000000000000000000000000000000000000000000000060808201528360a030922016036101d35761017860e4356106e2565b42106101c45750906101919160a4359160843516610712565b61019d60c43533610797565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b516337bf561360e11b81528490fd5b51635134a42560e11b81528490fd5b81516348f5c3ed60e01b81528690fd5b8280fd5b838591346101f2576101403660031901126101f2578335936001600160a01b038086169290919083870361036e57602435926101008060431936011261036a578160a43516330361035a57865181604482372090303f8751927f2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca49484527f000000000000000000000000000000000000000000000000000000000000000060208501528884015260608301527f0000000000000000000000000000000000000000000000000000000000000000608083015260a0309220160361034b5761012435901c7f000000000000000000000000000000000000000000000000000000000000000001421061033d575061032f817fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac95963390610712565b82519182526020820152a180f35b83516337bf561360e11b8152fd5b508351635134a42560e11b8152fd5b86516348f5c3ed60e01b81528490fd5b8780fd5b8580fd5b505050346100ad57816003193601126100ad57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b505050346100ad57816003193601126100ad57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b838591346101f25761040436610531565b92909160608401356001600160a01b031633036101e25763ffffffff8185013580921c9160801c1681018091116104495742106101c457509061044691610591565b80f35b634e487b7160e01b855260118652602485fd5b908591853461052d5761046e36610531565b6370a0823160e01b845233878501529390926020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156105235786916104f1575b50156101e25763ffffffff8185013580921c9160a01c1681018091116104495742106101c457509061044691610591565b90506020813d60201161051b575b8161050c60209383610559565b8101031261036e5751876104c0565b3d91506104ff565b83513d88823e3d90fd5b8380fd5b906101206003198301126105545761010060043592602319011261055457602490565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761057b57604052565b634e487b7160e01b600052604160045260246000fd5b9061059f60e08201356106e2565b4210156106d0576040908151610100908183823720303f8351917f2020dba91b30cc0006188af794c2fb30dd8520db7e2c088b7fc7c103c00ca49483527f000000000000000000000000000000000000000000000000000000000000000060208401528483015260608201527f0000000000000000000000000000000000000000000000000000000000000000608082015260018060a01b03908160a030922016036106bf578360005260206000206020830135036106ae57916106a760c08361069f60209660a07fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105999701359080878501351690608085013516610712565b013533610797565b51908152a1565b825163abab6bd760e01b8152600490fd5b8251635134a42560e11b8152600490fd5b6040516337bf561360e11b8152600490fd5b63ffffffff8160e01c9160c01c1681018091116106fc5790565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b031691908261072e5761072c9250610797565b565b9060446020926000926040519163a9059cbb60e01b83526004830152602482015282855af19081610774575b501561076257565b60405163fb7f507960e01b8152600490fd5b90503d1561078f5750600160005114601f3d11165b3861075a565b3b1515610789565b60008080809481945af1903d15610807573d9067ffffffffffffffff82116107f357604051916107d1601f8201601f191660200184610559565b825260203d92013e5b156107e157565b604051638a0332d560e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b506107da56fea264697066735822122003d59936561b75992db75855013d27a47f2e594ceda4fed8ea06f093464d51bd64736f6c63430008170033";

type EscrowDstZkSyncConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowDstZkSyncConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowDstZkSync__factory extends ContractFactory {
  constructor(...args: EscrowDstZkSyncConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      rescueDelay,
      accessToken,
      overrides || {}
    );
  }
  override deploy(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rescueDelay, accessToken, overrides || {}) as Promise<
      EscrowDstZkSync & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowDstZkSync__factory {
    return super.connect(runner) as EscrowDstZkSync__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowDstZkSyncInterface {
    return new Interface(_abi) as EscrowDstZkSyncInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EscrowDstZkSync {
    return new Contract(address, _abi, runner) as unknown as EscrowDstZkSync;
  }
}
