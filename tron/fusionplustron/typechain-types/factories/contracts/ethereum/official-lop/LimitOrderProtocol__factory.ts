/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  LimitOrderProtocol,
  LimitOrderProtocolInterface,
} from "../../../../contracts/ethereum/official-lop/LimitOrderProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AdvanceEpochFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ArbitraryStaticCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "BadSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "BitInvalidatedOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "ETHTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "EpochManagerAndBitInvalidatorsAreIncompatible",
    type: "error",
  },
  {
    inputs: [],
    name: "EthDepositRejected",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPermit2Transfer",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidatedOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "MakingAmountTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "MismatchArraysLengths",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "OrderIsNotSuitableForMassInvalidation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "PartialFillNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "Permit2TransferAmountTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "PredicateIsNotTrue",
    type: "error",
  },
  {
    inputs: [],
    name: "PrivateOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyDetected",
    type: "error",
  },
  {
    inputs: [],
    name: "RemainingInvalidatedOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFromFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "res",
        type: "bytes",
      },
    ],
    name: "SimulationResults",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapWithZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "TakingAmountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TakingAmountTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromMakerToTakerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromTakerToMakerFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSeriesNonce",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slotIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slotValue",
        type: "uint256",
      },
    ],
    name: "BitInvalidatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "series",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newEpoch",
        type: "uint256",
      },
    ],
    name: "EpochIncreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "series",
        type: "uint96",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "advanceEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offsets",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "and",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "arbitraryStaticCall",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
    ],
    name: "bitInvalidatorForOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "MakerTraits",
        name: "makerTraits",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "additionalMask",
        type: "uint256",
      },
    ],
    name: "bitsInvalidateForOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "MakerTraits",
        name: "makerTraits",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "MakerTraits[]",
        name: "makerTraits",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[]",
        name: "orderHashes",
        type: "bytes32[]",
      },
    ],
    name: "cancelOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "predicate",
        type: "bytes",
      },
    ],
    name: "checkPredicate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "series",
        type: "uint96",
      },
    ],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "series",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "makerEpoch",
        type: "uint256",
      },
    ],
    name: "epochEquals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "eq",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "receiver",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "makerAsset",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "takerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "MakerTraits",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "TakerTraits",
        name: "takerTraits",
        type: "uint256",
      },
    ],
    name: "fillContractOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "receiver",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "makerAsset",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "takerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "MakerTraits",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "TakerTraits",
        name: "takerTraits",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "fillContractOrderArgs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "receiver",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "makerAsset",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "takerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "MakerTraits",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "TakerTraits",
        name: "takerTraits",
        type: "uint256",
      },
    ],
    name: "fillOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "receiver",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "makerAsset",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "takerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "MakerTraits",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "vs",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "TakerTraits",
        name: "takerTraits",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "fillOrderArgs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "gt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "receiver",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "makerAsset",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "takerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "MakerTraits",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "hashOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "series",
        type: "uint96",
      },
    ],
    name: "increaseEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "lt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "not",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offsets",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "or",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "permit",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "action",
        type: "bytes",
      },
    ],
    name: "permitAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "rawRemainingInvalidatorForOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "remainingInvalidatorForOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "simulate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101a03462000275576001600160401b0390601f6200441538819003918201601f19168301929190848411838510176200025f5781602092849260409687528339810103126200027557516001600160a01b03918282169081830362000275578051906200006d826200027a565b601a825260208201907f31696e6368204c696d6974204f726465722050726f746f636f6c0000000000008252805196620000a7886200027a565b6001885260208801600d60fa1b8152620000c18562000296565b93610120948552620000d38a62000469565b95610140968752519020988960e05251902061010098818a524660a05283519160208301917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528584015260608301524660808301523060a083015260a0825260c0820192828410908411176200025f57828452815190206080523060c05233156200024857505060038054336001600160a01b0319821681179092559151969091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3610160928352610180938452613dfe958662000617873960805186612f81015260a0518661304c015260c05186612f4b015260e05186612fd001525185612ff601525184611e0b01525183611e3401525182601d015251818181610415015281816104a40152818161069f01528181610705015281816107470152818161080a01528181610939015281816110b90152818161194601528181612345015281816123d401526124f60152f35b631e4fbdf760e01b8252600060c490910152602490fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b604081019081106001600160401b038211176200025f57604052565b8051602091908281101562000335575090601f825111620002d45780825192015190808310620002c557501790565b82600019910360031b1b161790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b8285106200031b575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620002f7565b6001600160401b0381116200025f576000928354926001938481811c911680156200045e575b838210146200044a57601f811162000414575b5081601f8411600114620003ad57509282939183928694620003a1575b50501b916000199060031b1c191617905560ff90565b0151925038806200038b565b919083601f1981168780528488209488905b88838310620003f95750505010620003df575b505050811b01905560ff90565b015160001960f88460031b161c19169055388080620003d2565b858701518855909601959485019487935090810190620003bf565b85805284601f848820920160051c820191601f860160051c015b8281106200043e5750506200036e565b8781550185906200042e565b634e487b7160e01b86526022600452602486fd5b90607f16906200035b565b805160209081811015620004f75750601f825111620004965780825192015190808310620002c557501790565b90604051809263305a27a960e01b82528060048301528251908160248401526000935b828510620004dd575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350620004b9565b9192916001600160401b0381116200025f5760019182548381811c911680156200060b575b82821014620005f557601f8111620005bc575b5080601f83116001146200056f57508192939460009262000563575b5050600019600383901b1c191690821b17905560ff90565b0151905038806200054b565b90601f198316958460005282600020926000905b888210620005a45750508385969710620003df57505050811b01905560ff90565b80878596829496860151815501950193019062000583565b8360005283601f83600020920160051c820191601f850160051c015b828110620005e85750506200052f565b60008155018490620005d8565b634e487b7160e01b600052602260045260246000fd5b90607f16906200051c56fe608080604052600436101561005f575b50361561001b57600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361004d57005b604051631b10b0f960e01b8152600490fd5b60003560e01c90816305b1ea0314612a9f575080630d2c7c16146129f8578063143e86a7146129ad57806315169dec1461295d5780633644e5151461293a5780633f4ba83a146128c8578063435b9789146128665780634f38e2b81461283557806356a758681461214c5780635816d723146120b55780635c975abb1461208f5780636fe7b0ba1461205e578063715018a6146120015780637426114514611fe8578063802b2ef114611f775780638456cb5914611f1557806384b0196e14611df557806389e7c65014611d5a5780638da5cb5b14611d315780639fda64bd146117d1578063b68fb020146117b0578063bd61951d14611755578063bf15fcd81461171b578063bf797959146116c5578063bfa75143146116ac578063c2a4075314611664578063c3cf8043146115e8578063ca4ece22146115ac578063cc713a0414610f20578063ce3d710a14610ed2578063f2fde38b14610e49578063f497df751461023a5763fcea9e4e146101d7573861000f565b34610235576040366003190112610235576101f0612b56565b6024356001600160601b0381168103610235576001600160601b0360a01b9060a01b169060018060a01b03161760005260026020526020604060002054604051908152f35b600080fd5b36600319016101a0811261023557610100136102355761012435610184356001600160401b03811161023557610277610281913690600401612b6c565b906101643561309e565b939461029361028e612f48565b613134565b9361029d85613185565b9260009260a4358514610cff575b506102b4613584565b6102be85836137b4565b9015610cf6575069ffffffffffffffffffff8060e435168015918215610cea575b505015610cd85764ffffffffff8060e43560501c168015159081610cce575b50610cbc5760e435600160fa1b16610c4d575b5084610bfc575b61016435600160ff1b1615610b43578361014435108461014435180284189661034487868a898761398c565b98610164356001600160b81b031680610aeb575b505b60e435600160ff1b16151580610adf575b610acd5789890215610abb5761038260e435612f02565b15610a8d576024356001600160a01b0316600090815260046020908152604080832060e435608081901c63ffffffff168552928190529220549190600160789190911c60ff161b80831614610a7b5763ffffffff60e43560801c16600052602052600160ff60e43560781c161b176040600020555b60e435600160fc1b166109ba575b6064356001600160a01b039081167f000000000000000000000000000000000000000000000000000000000000000090911614806109a8575b80156109a257305b8a60e435600160f81b161561096357506104608987613c0f565b905061083357610483908b906001600160a01b0360243581169060643516613a8f565b610932575b50601381116108a4575b50506001600160a01b036084358116907f0000000000000000000000000000000000000000000000000000000000000000168114808061089b575b156107b45750508634106107a257863411610779575b60e435600160f71b161561066d57818080808a6104fe613b6e565b5af1610508612e71565b501561065b5785935b60e435600160fb1b16610580575b505050604061055361057c94937ffec331350fce78ba658e082a71da20ac9f8d798a99b3c79681c8440cbfe77e079361333a565b8151908482526020820152a1604051938493846040919493926060820195825260208201520152565b0390f35b909192935061058f8183613c70565b9091906024356001600160a01b031681846013821161062f575b50506001600160a01b031692833b1561062b57858995936105e98296948b948b8f6040519b8c9a8b998a986323175ef160e11b8a52339260048b01613275565b03925af18015610620579085939291610603575b8061051f565b8192935061061090612d1d565b61061d57908184926105fd565b80fd5b6040513d84823e3d90fd5b8580fd5b81955080935061063f9250612c7b565b60601c908360141161062b576014019260131901908a806105a9565b60405163b12d13eb60e01b8152600490fd5b86610735575b6020826044610680613b6e565b60405163a9059cbb60e01b81526004810191909152602481018b9052827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1806106ed575b156106db578593610511565b60405163fb7f507960e01b8152600490fd5b503d15610703576001825114601f3d11166106cf565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163b15156106cf565b630d0e30db60e41b825281806004818a7f00000000000000000000000000000000000000000000000000000000000000005af16106735750604051903d90823e3d90fd5b818080808a3403335af161078b612e71565b506104e35760405163b12d13eb60e01b8152600490fd5b604051631841b4e160e01b8152600490fd5b949094346107a2578061088a575b801561087d57305b61016435600160fc1b1615610845576107e38385613c40565b905061083357896107f7918a983390613a8f565b156105115761082e610807613b6e565b897f0000000000000000000000000000000000000000000000000000000000000000613b1a565b610511565b6040516301577e8360e51b8152600490fd5b61085f91968a6108558587613c40565b9390923390613a3a565b1561086b5786946107f7565b60405163478a520560e01b8152600490fd5b610885613b6e565b6107ca565b5060e435600160f71b1615156107c2565b503415156104cd565b6108ae8183612c7b565b60601c918160141161092e57823b1561092e57839260148680946108f98c958f8f8e918e916040519c8d9b8c9a8b9963adf38ba160e01b8b5260131901970195339260048b01613275565b03925af1801561092357908391156104925761091490612d1d565b61091f578188610492565b5080fd5b6040513d85823e3d90fd5b8480fd5b61095d90897f0000000000000000000000000000000000000000000000000000000000000000613b1a565b89610488565b61098b916109718b89613c0f565b9290916001600160a01b0360243581169060643516613a3a565b610483575b604051630e1407e960e31b8152600490fd5b81610446565b5061016435600160fe1b16151561043e565b6109c48785613bdc565b6001600160a01b036024358116828460138211610a4f575b50508181163b15610235578b60008f938f96610a198f91978f9885998f996040519c8d9b8c9a8b98630986bdd560e01b8a52339260048b01613275565b0393165af18015610a4357610a2f575b50610405565b610a3a919550612d1d565b6000938a610a29565b6040513d6000823e3d90fd5b819550809450610a5f9250612c7b565b60601c9183601411610235576014019260131901918e806109dc565b60405163527b154b60e11b8152600490fd5b60018060a01b03602435166000526005602052604060002088600052602052888603196040600020556103f7565b604051637dd2d13b60e11b8152600490fd5b6040516323bc005f60e21b8152600490fd5b5060a43589141561036b565b610144358a03610b14578a11610b02575b8a610358565b60405163fb8ae12960e01b8152600490fd5b610b2b8a610b25610144358e6131ec565b926131ec565b1015610afc5760405163fb8ae12960e01b8152600490fd5b610144359796610b5687868b89876138d5565b97858911610bca575b610164356001600160b81b031680610b78575b5061035a565b610144358b03610ba1578910610b8f575b8a610b72565b60405163240f51c960e11b8152600490fd5b610bb28b610b25610144358d6131ec565b1115610b895760405163240f51c960e11b8152600490fd5b985096508396610bdd878680898761398c565b98610144358a1115610b5f575b604051637f902a9360e01b8152600490fd5b610c068583613b8f565b80610c13575b5050610318565b610c1d9130612f22565b81610c42575b5015610c30578880610c0c565b604051635b314e0160e11b8152600490fd5b600191501489610c23565b610c5860e435612f02565b610caa5760e43560a081811c8316901b6024356001600160a01b03161760009081526002602052604090205460789190911c90911603610c985788610311565b6040516371f4582960e11b8152600490fd5b604051639e744e2560e01b8152600490fd5b6040516362b439dd60e11b8152600490fd5b905042118a6102fe565b604051636a6fed7f60e11b8152600490fd5b331614905089806102df565b60005260046000fd5b6001600160a01b03602435811691821591908215610dd3575b5050610dc15761016435600160fd1b166102ab57610d368684613ca1565b906014821015610d48575b50506102ab565b610d528282612c7b565b60601c82601411610235576014610d729360131901920190843091613347565b50610d7e60e435612f02565b15610d8b575b8080610d41565b6000526005602052604060002086600052602052604060002054610daf5788610d84565b60405163c5f2be5160e01b8152600490fd5b604051635cd5d23360e01b8152600490fd5b9091506000906001600160ff1b0381166fa2a8918ca85bafe22016d0b997e4df5f600160ff1b038110610e0e575b5050168114158a80610d18565b60209250600091608091604051918d835260ff1c601b0185830152610104356040830152606082015282805260015afa506000518b80610e01565b3461023557602036600319011261023557610e62612b56565b610e6a613072565b6001600160a01b03908116908115610eb957600354826001600160601b0360a01b821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b34610235576060366003190112610235576020610f16610ef0612b56565b6001600160a01b031660243560a01b176000908152600260205260409020546044351490565b6040519015158152f35b346102355736600319016101608112610235576101001361023557610104356001600160401b03811161023557610f5b903690600401612b6c565b610124359190600061014435610f7261028e612f48565b91610f7c83613185565b9360a43595868614611548575b5050610f93613584565b610f9b613853565b9015610cf6575060e4359169ffffffffffffffffffff808416801591821561153c575b505015610cd85764ffffffffff808460501c168015159081611532575b50610cbc57600160fa1b84166114ed575b50600160ff1b958187161561146057858810868918028618966110128860c43584613d81565b986001600160b81b0384169081611423575b50505b841615159081611418575b50610acd5786860215610abb5761104883612f02565b156113ea5760018060a01b03602435166000526004602052604060002063ffffffff8460801c16600160ff8660781c161b918160005280602052604060002054918380841614610a7b57600052602052176040600020555b600160fc1b91838316611386575b6001600160a01b03927f0000000000000000000000000000000000000000000000000000000000000000808516939092606435861685811480611377575b801561137157305b600160f81b8a16156113475761110a8480613c0f565b9050610833578c6111229185948b6024351690613a8f565b611337575b61061d5750908989939286608435168681149384809561132f575b156112a857505050925050506107a257600160f71b831615611246575060008080808961116d613b6e565b5af1611177612e71565b501561065b5784915b600160fb1b166111bc575b5060406105537ffec331350fce78ba658e082a71da20ac9f8d798a99b3c79681c8440cbfe77e079261057c9561333a565b90506024351691823b1561023557600060405180946323175ef160e11b82528183816111ef878c8c338c600487016132dd565b03925af1908115610a43576105538560409261057c967ffec331350fce78ba658e082a71da20ac9f8d798a99b3c79681c8440cbfe77e0795611237575b50955092505061118b565b61124090612d1d565b8961122c565b602060006044611254613b6e565b6040519063a9059cbb60e01b825260048201528a602482015282855af19081611285575b50156106db578491611180565b90503d156112a05750600160005114601f3d11165b87611278565b3b151561129a565b909192938095969997509461131f575b84156113115730925b16156112f857906112d492913390613a8f565b6112df575b50611180565b6112f290886112ec613b6e565b91613b1a565b876112d9565b61130593975033906139fe565b1561086b5786936112d4565b611319613b6e565b926112c1565b600160f71b8716151594506112b8565b506000611142565b611342338c87613b1a565b611127565b61136591928d6113578680613c0f565b9390928c6024351690613a3a565b15610990578190611122565b336110f4565b50600160fe1b831615156110ec565b6024356001600160a01b0316803b156102355760008988928a838a6113c360405197889687958694630986bdd560e01b86523390600487016132dd565b03925af18015610a43576113d8575b506110ae565b6113e29150612d1d565b6000886113d2565b60018060a01b03602435166000526005602052604060002084600052602052858503196040600020556110a0565b905086141588611032565b8981810361143b5750508911610b02575b8980611024565b610b25611448928d6131ec565b10156114345760405163fb8ae12960e01b8152600490fd5b60c4359688611470818a85613d5a565b98888a116114cf575b506001600160b81b0384169081611492575b5050611027565b8a8181036114aa5750508810610b8f575b898061148b565b610b256114b7928c6131ec565b11156114a35760405163240f51c960e11b8152600490fd5b985098506114df87809984613d81565b98808a11610bea578a611479565b6114f684612f02565b610caa5760a084811c8216901b6024356001600160a01b031617600090815260026020526040902054607885901c90911603610c985787610fec565b9050421189610fdb565b33161490508880610fbe565b6020600080936040519080630b135d3f60e11b958684528a6004850152604060248501528160448501526064840137606401906024356001600160a01b03165afa61159b575b5015610dc1578680610f89565b600051143d6020141690508761158e565b346102355760206115c96115bf36612b99565b9092919230612f22565b819291926115de575b50506040519015158152f35b10905082806115d2565b3461023557602036600319011261023557611601612b40565b6001600160601b0360a01b8160a01b1633176000526002602052604060002060018154018091556001600160601b036040519216825260208201527f099133aefc2c2d1e56f8ef3622ec8e80979a0713fc9c4e1497740efcf809939660403392a2005b34610235576040366003190112610235576001600160a01b03611685612b56565b16600052600560205260406000206024356000526020526020604060002054604051908152f35b34610235576020610f166116bf36612b99565b91612ea1565b34610235576020366003190112610235576004356001600160401b038111610235576117016116fa6020923690600401612b6c565b9030612f22565b81611712575b506040519015158152f35b90501582611707565b346102355761173261172c36612c3c565b91612f22565b901561174357602090604051908152f35b604051631f1b8f6160e01b8152600490fd5b346102355760008061176636612c3c565b90816040519283928337810184815203915af4611781612e71565b6040805163032695f960e31b81529215156004840152602483015281906117ac906044830190612bcc565b0390fd5b34610235576040366003190112610235576117cf602435600435612d92565b005b36600319016101808112610235576101001361023557610144356101243560006101643561180061028e612f48565b9061180a82613185565b9260a43594858514611c93575b50611820613584565b611828613853565b9015610cf6575060e4359169ffffffffffffffffffff8084168015918215611c87575b505015610cd85764ffffffffff808460501c168015159081611c7d575b50610cbc57600160fa1b8416611c38575b50600160ff1b9581871615611bab578588108689180286189661189f8860c43584613d81565b986001600160b81b0384169081611b6e575b50505b841615159081611b63575b50610acd5786860215610abb576118d583612f02565b15611b355760018060a01b03602435166000526004602052604060002063ffffffff8460801c16600160ff8660781c161b918160005280602052604060002054918380841614610a7b57600052602052176040600020555b600160fc1b91838316611ad1575b6001600160a01b03927f0000000000000000000000000000000000000000000000000000000000000000808516939092606435861685811480611ac2575b8015611abc57305b600160f81b8a1615611aa0576119978480613c0f565b9050610833578c6119af9185948b6024351690613a8f565b611a90575b61061d5750608435851691848314918280611a87575b15611a5857505050508734106107a2578790813411611a37575b600160f71b851615611a015750600080809350809261116d613b6e565b81611a17575b5050602060006044611254613b6e565b6004600080938193630d0e30db60e41b83525af115610a43578688611a07565b906000808080933403335af1611a4b612e71565b501561065b5787906119e4565b909192969450346107a25789968b928461131f57841561131157309216156112f857906112d492913390613a8f565b503415156119ca565b611a9b338c87613b1a565b6119b4565b611ab091928d6113578680613c0f565b156109905781906119af565b33611981565b50600160fe1b83161515611979565b6024356001600160a01b0316803b156102355760008988928a838a611b0e60405197889687958694630986bdd560e01b86523390600487016132dd565b03925af18015610a4357611b23575b5061193b565b611b2d9150612d1d565b600088611b1d565b60018060a01b036024351660005260056020526040600020846000526020528585031960406000205561192d565b9050861415886118bf565b89818103611b865750508911610b02575b89806118b1565b610b25611b93928d6131ec565b1015611b7f5760405163fb8ae12960e01b8152600490fd5b60c4359688611bbb818a85613d5a565b98888a11611c1a575b506001600160b81b0384169081611bdd575b50506118b4565b8a818103611bf55750508810610b8f575b8980611bd6565b610b25611c02928c6131ec565b1115611bee5760405163240f51c960e11b8152600490fd5b98509850611c2a87809984613d81565b98808a11610bea578a611bc4565b611c4184612f02565b610caa5760a084811c8216901b6024356001600160a01b031617600090815260026020526040902054607885901c90911603610c985787611879565b9050421189611868565b3316149050888061184b565b6001600160a01b0360243581168015929091908315611cba575b505050610dc15786611817565b919250906000906001600160ff1b0381166fa2a8918ca85bafe22016d0b997e4df5f600160ff1b038110611cf6575b5050161415878080611cad565b60209250600091608091604051918a835260ff1c601b0185830152610104356040830152606082015282805260015afa506000518980611ce9565b34610235576000366003190112610235576003546040516001600160a01b039091168152602090f35b34610235576040366003190112610235576001600160401b0360043581811161023557611d8b903690600401612c0c565b909160243590811161023557611da5903690600401612c0c565b90818303611de35760005b838110611db957005b80611ddd611dca6001938789612d6c565b35611dd6838787612d6c565b3590612d92565b01611db0565b604051631b2f9b3b60e31b8152600490fd5b3461023557600036600319011261023557611e2f7f00000000000000000000000000000000000000000000000000000000000000006135a5565b611e587f00000000000000000000000000000000000000000000000000000000000000006136ca565b6040516020808201928284106001600160401b03851117611eff57916020611eb28594611ea4979660405260008452604051978897600f60f81b895260e0858a015260e0890190612bcc565b908782036040890152612bcc565b91466060870152306080870152600060a087015285830360c0870152519182815201929160005b828110611ee857505050500390f35b835185528695509381019392810192600101611ed9565b634e487b7160e01b600052604160045260246000fd5b3461023557600036600319011261023557611f2e613072565b611f36613584565b6003805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1005b346102355761010080600319360112610235576042602091610120611f9a612f48565b91604051907f3af21ec5a20011b88d3b7b4ed7c806cef05a5980cf34974bcd53566a131f7e4c8252600486830137206040519161190160f01b83526002830152602282015220604051908152f35b34610235576020610f16611ffb36612b99565b91612cc4565b346102355760003660031901126102355761201a613072565b600380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102355760206120716115bf36612b99565b819291926120855750506040519015158152f35b14905082806115d2565b3461023557600036600319011261023557602060ff60035460a01c166040519015158152f35b6040366003190112610235576001600160401b03600435818111610235576120e1903690600401612b6c565b91602435908111610235576120fa903690600401612b6c565b6121078484959395612c7b565b60601c918060141161023557600093849361212e9260131901916014019030903390613347565b508060405194853783305af43d6000833e15612148573d90f35b3d90fd5b3461023557366003190161018081126102355761010013610235576001600160401b036101043581811161023557612188903690600401612b6c565b909161016435908111610235576121a66121b0913690600401612b6c565b906101443561309e565b9491926121c261028e97929597612f48565b946121cc86613185565b9360009360a43586146127d1575b50506121e4613584565b6121ee85836137b4565b9015610cf6575069ffffffffffffffffffff8060e4351680159182156127c5575b505015610cd85764ffffffffff8060e43560501c1680151590816127bb575b50610cbc5760e435600160fa1b16612770575b5084612731575b61014435600160ff1b161561268b578361012435108461012435180284189661227487868a898761398c565b98610144356001600160b81b03168061264b575b505b60e435600160ff1b1615158061263f575b610acd5789890215610abb576122b260e435612f02565b15612611576024356001600160a01b0316600090815260046020908152604080832060e435608081901c63ffffffff168552928190529220549190600160789190911c60ff161b80831614610a7b5763ffffffff60e43560801c16600052602052600160ff60e43560781c161b176040600020555b60e435600160fc1b1661255c575b6064356001600160a01b039081167f0000000000000000000000000000000000000000000000000000000000000000909116148061254a575b801561254457305b8a60e435600160f81b161561252057506123908987613c0f565b9050610833576123b3908b906001600160a01b0360243581169060643516613a8f565b6124ef575b5060138111612474575b50506001600160a01b036084358116907f0000000000000000000000000000000000000000000000000000000000000000168114808061246c575b15612424575050866107a25760e435600160f71b161561067357818080808a6104fe613b6e565b9094908061245b575b801561244e57305b61014435600160fc1b1615610845576107e38385613c40565b612456613b6e565b612435565b5060e435600160f71b16151561242d565b5060006123fd565b61247e8183612c7b565b60601c918160141161092e57823b1561092e57839260148680946124c98c958f8f8e918e916040519c8d9b8c9a8b9963adf38ba160e01b8b5260131901970195339260048b01613275565b03925af1801561092357908391156123c2576124e490612d1d565b61091f5781886123c2565b61251a90897f0000000000000000000000000000000000000000000000000000000000000000613b1a565b896123b8565b61252e916109718b89613c0f565b6123b357604051630e1407e960e31b8152600490fd5b81612376565b5061014435600160fe1b16151561236e565b6125668785613bdc565b6001600160a01b0360243581168284601382116125e5575b50508181163b15610235578b60008f938f966125bb8f91978f9885998f996040519c8d9b8c9a8b98630986bdd560e01b8a52339260048b01613275565b0393165af18015610a43576125d1575b50612335565b6125dc919550612d1d565b6000938a6125cb565b8195508094506125f59250612c7b565b60601c9183601411610235576014019260131901918e8061257e565b60018060a01b0360243516600052600560205260406000208860005260205288860319604060002055612327565b5060a43589141561229b565b610124358a03612662578a11610b02575b8a612288565b6126738a610b25610124358e6131ec565b101561265c5760405163fb8ae12960e01b8152600490fd5b61012435979661269e87868b89876138d5565b97858911612700575b610144356001600160b81b0316806126c0575b5061228a565b610124358b036126d7578910610b8f575b8a6126ba565b6126e88b610b25610124358d6131ec565b11156126d15760405163240f51c960e11b8152600490fd5b985096508396612713878680898761398c565b98610124358a11156126a757604051637f902a9360e01b8152600490fd5b61273b8583613b8f565b80612748575b5050612248565b6127529130612f22565b81612765575b5015610c30578880612741565b600191501489612758565b61277b60e435612f02565b610caa5760e43560a081811c8316901b6024356001600160a01b03161760009081526002602052604090205460789190911c90911603610c985788612241565b905042118a61222e565b3316149050898061220f565b6020600080936040519080630b135d3f60e11b958684528d6004850152604060248501528160448501526064840137606401906024356001600160a01b03165afa612824575b5015610dc15788806121da565b600051143d60201416905089612817565b346102355760206128486115bf36612b99565b8192919261285c5750506040519015158152f35b11905082806115d2565b34610235576040366003190112610235576001600160a01b03612887612b56565b166000526005602052604060002060243560005260205260406000205480156128b65760209060405190198152f35b60405163aa3eef9560e01b8152600490fd5b34610235576000366003190112610235576128e1613072565b60035460ff8160a01c16156129285760ff60a01b19166003556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1005b604051638dfc202b60e01b8152600490fd5b34610235576000366003190112610235576020612955612f48565b604051908152f35b34610235576020366003190112610235576004356001600160401b038111610235576129926116fa6020923690600401612b6c565b816129a257506040519015158152f35b600191501482611707565b34610235576040366003190112610235576001600160a01b036129ce612b56565b166000526004602052604060002060243560081c6000526020526020604060002054604051908152f35b3461023557604036600319011261023557612a11612b40565b60243580158015612a95575b612a83576001600160601b0360a01b8260a01b16331760005260026020526040600020908154018091556001600160601b036040519216825260208201527f099133aefc2c2d1e56f8ef3622ec8e80979a0713fc9c4e1497740efcf809939660403392a2005b60405163555fbbbf60e01b8152600490fd5b5060ff8111612a1d565b346102355760403660031901126102355760043590612abd82612f02565b15612b31575033600052600460205260406000209063ffffffff8160801c169182600052602052604060002090600160ff6024359260781c161b1781541780915560405191825260208201527fcda0f7e73d07bdb14b141f2cf4745926629a1b63e7c6a3dd8a80232cb459a85060403392a2005b63435ffd6560e11b8152600490fd5b600435906001600160601b038216820361023557565b600435906001600160a01b038216820361023557565b9181601f84011215610235578235916001600160401b038311610235576020838186019501011161023557565b9060406003198301126102355760043591602435906001600160401b03821161023557612bc891600401612b6c565b9091565b919082519283825260005b848110612bf8575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612bd7565b9181601f84011215610235578235916001600160401b038311610235576020808501948460051b01011161023557565b906040600319830112610235576004356001600160a01b03811681036102355791602435906001600160401b03821161023557612bc891600401612b6c565b6bffffffffffffffffffffffff199035818116939260148110612c9d57505050565b60140360031b82901b16169150565b90939293848311610235578411610235578101920390565b9290919260005b63ffffffff8216908115612d12576116fa82612ce8928888612cac565b81612d07575b50612cfd579060201c90612ccb565b5050915050600190565b600191501438612cee565b505050915050600090565b6001600160401b038111611eff57604052565b604081019081106001600160401b03821117611eff57604052565b90601f801991011681019081106001600160401b03821117611eff57604052565b9190811015612d7c5760051b0190565b634e487b7160e01b600052603260045260246000fd5b90612d9c82612f02565b15612e0b575033600052600460205260406000209063ffffffff8160801c169182600052602052600160ff60406000209260781c161b81541780915560405191825260208201527fcda0f7e73d07bdb14b141f2cf4745926629a1b63e7c6a3dd8a80232cb459a85060403392a2565b7f5152abf959f6564662358c2e52b702259b78bac5ee7842a0f01937e670efcc7d915060209033600052600582526040600020816000528252600019604060002055604051908152a1565b6001600160401b038111611eff57601f01601f191660200190565b3d15612e9c573d90612e8282612e56565b91612e906040519384612d4b565b82523d6000602084013e565b606090565b9290919260009060005b63ffffffff8216908115612ef6576116fa82612ec8928989612cac565b9015908115612eea575b50612ee1579060201c90612eab565b50509150915090565b60019150141538612ed2565b50505050915050600190565b600160ff1b81161580159190612f16575090565b600160fe1b1615919050565b916000906020928294826040519283375afa60203d14169182612f4157565b6000519150565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480613049575b15612fa3577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c081018181106001600160401b03821117611eff5760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614612f7a565b6003546001600160a01b0316330361308657565b60405163118cdaa760e01b8152336004820152602490fd5b90929190600160fb1b81161561312b576130b88285612c7b565b60601c9382601411610235576014019160131901925b62ffffff60e083901c811694851561311b57808611610235576130f5908596818197612cac565b919091935b60c81c1692831561310f578311610235579190565b50509050600090600090565b92939094506000946000946130fa565b339391926130ce565b6042906101206040517f3af21ec5a20011b88d3b7b4ed7c806cef05a5980cf34974bcd53566a131f7e4c815261010060046020830137206040519161190160f01b8352600283015260228201522090565b61319060e435612f02565b156131b5575060a435905b81156131a357565b604051637b8fded160e11b8152600490fd5b60018060a01b036024351660005260056020526040600020906000526020526131e660406000205460a435906137a3565b9061319b565b818102929181159184041417156131ff57565b634e487b7160e01b600052601160045260246000fd5b6004358152602435602082015260443560408201526064356060820152608435608082015260a43560a082015260c43560c082015260e060e435910152565b908060209392818452848401376000828201840152601f01601f1916010190565b94916132da999794916132a191999794996101e061329289613215565b806101008a0152880191613254565b6101208601989098526001600160a01b03166101408501526101608401526101808301526101a08201528084036101c090910152613254565b90565b93600093610220969293856101e06132f489613215565b806101008a01528801526102009461012088015260018060a01b03166101408701526101608601526101808501526101a0840152806101c0840152820152016000815290565b919082039182116131ff57565b9190936000949385946040519383918260641461352257826048146134b4578260e01461349357826101001461347057826060146133d4575050610160146133a557639fd5a6cf60e01b8352849160049181908584013701925af190565b6302b67b5760e41b8352610164935061016091506004830137826e22d473030f116ddee9f6b43ac78ba35af190565b60209450604093925095610164966302b67b5760e41b8752600487015260248601526014826050870137861965ffffffffffff9181601485013560e01c0183166064880152601884013560e01c608488015260a4870152601c83013560e01c011660c485015261010060e4850152816101048501528280820161012486013701610144830137826e22d473030f116ddee9f6b43ac78ba35af190565b50506323f2ebc360e21b84525061010493859250906101009060048501375af190565b505063d505accf60e01b84525060e4938592509060e09060048501375af190565b879450610104969392506323f2ebc360e21b86526004860152602485015260206008602883013592803560e01c60448801528519600482013560e01c016064880152600160848801528360ff1c601b0160a48801520160c48601376001600160ff1b031660e48401525af190565b87945060e49693925063d505accf60e01b865260048601526024850152602060246044830135928281604489013785198382013560e01c0160648801528360ff1c601b0160848801520160a48601376001600160ff1b031660c48401525af190565b60ff60035460a01c1661359357565b60405163d93c066560e01b8152600490fd5b60ff81146135e35760ff811690601f82116135d157604051916135c783612d30565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600080549060018260011c90600184169384156136c0575b60209485841081146136ac578387528694939291811561368c5750600114613630575b50506132da92500382612d4b565b60008080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56395935091905b8183106136745750506132da93508201013880613622565b8554878401850152948501948694509183019161365c565b9150506132da94925060ff191682840152151560051b8201013880613622565b634e487b7160e01b85526022600452602485fd5b91607f16916135ff565b60ff81146136ec5760ff811690601f82116135d157604051916135c783612d30565b506040516000600190600154918260011c9060018416938415613799575b60209485841081146136ac578387528694939291811561368c575060011461373a5750506132da92500382612d4b565b9093915060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6936000915b8183106137815750506132da93508201013880613622565b85548784018501529485019486945091830191613769565b91607f169161370a565b9081156137af57501990565b905090565b9060e435600160f91b161561383e57801561382e576137d281612e56565b906137e06040519283612d4b565b8082526020820192368282011161023557816000926020928637830101525190206001600160a01b0390811660043590911603613820575b600190600090565b60009063dc11ee6b60e01b90565b5060009163b2d25e4960e01b9150565b905015613818576000906374896a7b60e01b90565b600060e435600160f91b161561386f579063b2d25e4960e01b90565b50600190600090565b93906138a2906132da9997949896936101c061389388613215565b80610100890152870191613254565b6101208501979097526001600160a01b03166101408401526101608301526101808201528084036101a090910152613254565b939190926138e38486613cd4565b90928115613976576138f58285612c7b565b60601c938260141161023557602096601494613931936040519a8b998a988998631d9671c360e01b8a5260131901960194339260048a01613878565b03915afa908115610a4357600091613947575090565b90506020813d60201161396e575b8161396260209383612d4b565b81010312610235575190565b3d9150613955565b9450505050506132da915060c43560a435613d5a565b9391909261399a8486613d07565b909281156139e8576139ac8285612c7b565b60601c938260141161023557602096601494613931936040519a8b998a9889986301afff1560e71b8a5260131901960194339260048a01613878565b9450505050506132da915060c43560a435613d81565b9060006064926020958295604051946323b872dd60e01b86526004860152602485015260448401525af1600160005114601f3d11163d15171690565b92948060009581602098889596604051976323b872dd60e01b8952600489015260248801526044870152613a83575b5050606401925af1600160005114601f3d11163d15171690565b60648501378038613a69565b90926001600160a01b038111613b085760009260405194631b63c28b60e11b865260048601526024850152604484015260648301528060846e22d473030f116ddee9f6b43ac78ba39382855af19081613afd575b5015613aeb57565b60405163f405907160e01b8152600490fd5b90503b151538613ae3565b604051638112e11960e01b8152600490fd5b916024926000809481808094632e1a7d4d60e01b8252876004525af11561062057306001600160a01b03821603613b5057505050565b828080938193611388f115613b625750565b604051903d90823e3d90fd5b6001600160a01b036044358116908115613b86575090565b90506024351690565b91909160208310613bd35780359063ffffffff808360601c169260801c1693601f19018411613bc2578101602001920390565b6309605a0160e41b60005260046000fd5b50600091508190565b91909160208310613bd35780359063ffffffff808360a01c169260c01c1693601f19018411613bc2578101602001920390565b91909160208310613bd35780359063ffffffff918060201b8316921693601f19018411613bc2578101602001920390565b91909160208310613bd35780359063ffffffff8083169260201c1693601f19018411613bc2578101602001920390565b91909160208310613bd35780359063ffffffff8260c01c169160e01c93601f19018411613bc2578101602001920390565b91909160208310613bd35780359063ffffffff808360801c169260a01c1693601f19018411613bc2578101602001920390565b91909160208310613bd35780359063ffffffff808360201c169260401c1693601f19018411613bc2578101602001920390565b91909160208310613bd35780359063ffffffff808360401c169260601c1693601f19018411613bc2578101602001920390565b8115613d44570490565b634e487b7160e01b600052601260045260246000fd5b80831760801c15613d7757613d72906132da936131ec565b613d3a565b6132da9202613d3a565b9181811760801c15613db75790613d97916131ec565b908082018092116131ff5760001982019182116131ff576132da91613d3a565b6132da929102810160001901613d3a56fea26469706673582212204f3efd1bcf16df87010d284ea5cfcefad52928275f31d74df4ac8cf0dedc6a4464736f6c63430008170033";

type LimitOrderProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitOrderProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitOrderProtocol__factory extends ContractFactory {
  constructor(...args: LimitOrderProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_weth, overrides || {});
  }
  override deploy(
    _weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_weth, overrides || {}) as Promise<
      LimitOrderProtocol & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LimitOrderProtocol__factory {
    return super.connect(runner) as LimitOrderProtocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitOrderProtocolInterface {
    return new Interface(_abi) as LimitOrderProtocolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LimitOrderProtocol {
    return new Contract(address, _abi, runner) as unknown as LimitOrderProtocol;
  }
}
