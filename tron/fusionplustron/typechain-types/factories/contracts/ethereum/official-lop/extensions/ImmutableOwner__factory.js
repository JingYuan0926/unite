"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImmutableOwner__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_immutableOwner",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "IOAccessDenied",
        type: "error",
    },
    {
        inputs: [],
        name: "IMMUTABLE_OWNER",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a03461006857601f61012538819003918201601f19168301916001600160401b0383118484101761006d5780849260209460405283398101031261006857516001600160a01b03811681036100685760805260405160a1908161008482396080518160380152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080806040526004361015601257600080fd5b600090813560e01c63f3d1372f14602857600080fd5b34606757816003193601126067577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fdfea26469706673582212207f7d4c6d06ea5242ae527391dc4ece69be835b1580ad1f827af0901cfb76415564736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class ImmutableOwner__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_immutableOwner, overrides) {
        return super.getDeployTransaction(_immutableOwner, overrides || {});
    }
    deploy(_immutableOwner, overrides) {
        return super.deploy(_immutableOwner, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ImmutableOwner__factory = ImmutableOwner__factory;
ImmutableOwner__factory.bytecode = _bytecode;
ImmutableOwner__factory.abi = _abi;
//# sourceMappingURL=ImmutableOwner__factory.js.map