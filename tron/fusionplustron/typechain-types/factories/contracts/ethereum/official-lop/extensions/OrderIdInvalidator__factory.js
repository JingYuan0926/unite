"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderIdInvalidator__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "limitOrderProtocol_",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "AccessDenied",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidOrderHash",
        type: "error",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "receiver",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "makerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "takerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "makingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "takingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "MakerTraits",
                        name: "makerTraits",
                        type: "uint256",
                    },
                ],
                internalType: "struct IOrderMixin.Order",
                name: "order",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
            {
                internalType: "bytes32",
                name: "orderHash",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
            },
        ],
        name: "preInteraction",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a03461006957601f61025f38819003918201601f19168301916001600160401b0383118484101761006e5780849260209460405283398101031261006957516001600160a01b0381168103610069576080526040516101da908161008582396080518160a30152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040908082526004918236101561001757600080fd5b600092833560e01c630986bdd51461002e57600080fd5b346101695736600319016101e0811261016d57610100136101695767ffffffffffffffff90610104358281116101655761006b9036908301610171565b505061012435936001600160a01b03926101443584811603610161576101c4359081116101615761009f9036908401610171565b91847f000000000000000000000000000000000000000000000000000000000000000016330361015357506001600160e01b03199190358281169184811061013f575b5050905060e01c9160243516908186528560205283862083875260205283862054801560001461012357505084528360205281842090845260205282205580f35b91509391500361013257505080f35b5163561a411d60e11b8152fd5b83919250840360031b1b16168038806100e2565b634ca8886760e01b81528390fd5b8680fd5b8580fd5b8380fd5b8480fd5b9181601f8401121561019f5782359167ffffffffffffffff831161019f576020838186019501011161019f57565b600080fdfea26469706673582212207a607606bfae2d42f58c86726398ed396df72c27cdafa282b7e590816055513b64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class OrderIdInvalidator__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(limitOrderProtocol_, overrides) {
        return super.getDeployTransaction(limitOrderProtocol_, overrides || {});
    }
    deploy(limitOrderProtocol_, overrides) {
        return super.deploy(limitOrderProtocol_, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.OrderIdInvalidator__factory = OrderIdInvalidator__factory;
OrderIdInvalidator__factory.bytecode = _bytecode;
OrderIdInvalidator__factory.abi = _abi;
//# sourceMappingURL=OrderIdInvalidator__factory.js.map