"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExtensionMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes",
                name: "extension",
                type: "bytes",
            },
        ],
        name: "getCustomData",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608080604052346100165761010e908161001c8239f35b600080fdfe6080806040526004361015601257600080fd5b6000803560e01c63d0cfe3ab14602757600080fd5b3460a057602036600319011260a05767ffffffffffffffff600435818111609c5736602382011215609c578060040135918211609c573660248383010111609c57916077849260246040950160a3565b8092916020855281602086015285850137828201840152601f01601f19168101030190f35b8280fd5b80fd5b91906020811060cf57823560e01c9281846020011160ca578301602001929003601f190190565b600080fd5b5060009150819056fea2646970667358221220eb333da23ab96a3cfbecf9fd390bd425ac18ea299dac66829e7c5b81b852aab264736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class ExtensionMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ExtensionMock__factory = ExtensionMock__factory;
ExtensionMock__factory.bytecode = _bytecode;
ExtensionMock__factory.abi = _abi;
//# sourceMappingURL=ExtensionMock__factory.js.map