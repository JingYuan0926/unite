"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TakerContract__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IOrderMixin",
                name: "swap",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "receiver",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "makerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "takerAsset",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "makingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "takingAmount",
                        type: "uint256",
                    },
                    {
                        internalType: "MakerTraits",
                        name: "makerTraits",
                        type: "uint256",
                    },
                ],
                internalType: "struct IOrderMixin.Order",
                name: "order",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "vs",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "TakerTraits",
                name: "takerTraits",
                type: "uint256",
            },
        ],
        name: "fillOrder",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
];
const _bytecode = "0x60a03461006957601f61021438819003918201601f19168301916001600160401b0383118484101761006e5780849260209460405283398101031261006957516001600160a01b03811681036100695760805260405161018f908161008582396080518160c10152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c639fda64bd1461002a57600080fd5b366003190161018081126101555761010013610151576101046101246101449061016492639fda64bd60e01b85526004356004860152602435602486015260443560448601526064356064860152608435608486015260a43560a486015260c43560c486015260e43560e4860152803590850152803590840152803590830152803590820152606081610184813460018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af18015610146576100f1575080f35b60603d60601161013f575b601f19601f820116820167ffffffffffffffff83821091111761012b5790606091810103126101285780f35b80fd5b634e487b7160e01b83526041600452602483fd5b503d6100fc565b6040513d84823e3d90fd5b5080fd5b8280fdfea2646970667358221220d76a21d8215ea0f38a12f107f262b0eb565c56cccb906fdaee0c5960ed78a1f264736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class TakerContract__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(swap, overrides) {
        return super.getDeployTransaction(swap, overrides || {});
    }
    deploy(swap, overrides) {
        return super.deploy(swap, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.TakerContract__factory = TakerContract__factory;
TakerContract__factory.bytecode = _bytecode;
TakerContract__factory.abi = _abi;
//# sourceMappingURL=TakerContract__factory.js.map