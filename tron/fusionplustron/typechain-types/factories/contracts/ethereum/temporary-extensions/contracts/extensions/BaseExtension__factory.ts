/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  BaseExtension,
  BaseExtensionInterface,
} from "../../../../../../contracts/ethereum/temporary-extensions/contracts/extensions/BaseExtension";

const _abi = [
  {
    inputs: [],
    name: "LIMIT_ORDER_PROTOCOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "receiver",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "makerAsset",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "takerAsset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "makingAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "takingAmount",
            type: "uint256",
          },
          {
            internalType: "MakerTraits",
            name: "makerTraits",
            type: "uint256",
          },
        ],
        internalType: "struct IOrderMixin.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "extension",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "makingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "takingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remainingMakingAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "postInteraction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class BaseExtension__factory {
  static readonly abi = _abi;
  static createInterface(): BaseExtensionInterface {
    return new Interface(_abi) as BaseExtensionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaseExtension {
    return new Contract(address, _abi, runner) as unknown as BaseExtension;
  }
}
