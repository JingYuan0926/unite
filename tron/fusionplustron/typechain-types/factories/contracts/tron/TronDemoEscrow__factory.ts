/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TronDemoEscrow,
  TronDemoEscrowInterface,
} from "../../../contracts/tron/TronDemoEscrow";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "safetyDeposit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DemoEscrowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DemoEscrowWithdrawn",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct TronDemoEscrow.DemoImmutables",
        name: "dstImmutables",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "srcCancellationTimestamp",
        type: "uint256",
      },
    ],
    name: "createDstEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "escrowBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "escrowExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "escrowExistsCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "escrows",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maker",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "taker",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "safetyDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timelocks",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "getEscrow",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct TronDemoEscrow.DemoImmutables",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761077d908161001c8239f35b600080fdfe608060408181526004908136101561001f575b505050361561001d57005b005b600092833560e01c9081632d83549c14610606575080633b5775de146105de57806363615149146104da5780636f9fb98a146104bb5780637835ba331461048e5780638702ef201461048e578063c4d252f5146103db578063dea024e41461015e5763f023b81103610012573461015a576020918260031936011261015657610120939160e0913583836100b16106bb565b828152828882015282858201528260608201528260808201528260a08201528260c08201520152808452600185526100ee60ff8386205416610677565b83528284526101078180852094600287522054936106f2565b908051948251865280830151908601528082015190850152606081015160608501526080810151608085015260a081015160a085015260c081015160c0850152015160e0830152610100820152f35b8380fd5b8280fd5b5036600319016101208112610156576101001361015a5760a435908115610399576024928335908115610357578035948587526020916001835260ff858920541661031f5760843591826102a55760c43587018088116102935734106102585750917fd77c065f3564465bca6f8a4877b6511e1ee4a6f11716b5dd4ae4d2974213a8fd959391608095935b888a52898352848a209389855560018501556044356002850155606435600385015583015583600583015560c43591826006820155600760e43591015560018152828820600160ff1982541617905560028152348389205582519384528301523390820152426060820152a280f35b855162461bcd60e51b815291820184905260169082015275496e73756666696369656e74205452582076616c756560501b6044820152606490fd5b50634e487b7160e01b89526011825288fd5b60c43534106102dd5750917fd77c065f3564465bca6f8a4877b6511e1ee4a6f11716b5dd4ae4d2974213a8fd959391608095936101e9565b855162461bcd60e51b8152918201849052601b908201527f496e73756666696369656e7420736166657479206465706f73697400000000006044820152606490fd5b60156064928487519362461bcd60e51b855284015282015274457363726f7720616c72656164792065786973747360581b6044820152fd5b606490601886602086519362461bcd60e51b85528401528201527f486173686c6f636b2063616e6e6f7420626520656d70747900000000000000006044820152fd5b5162461bcd60e51b8152602081840152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b50903461015a57602036600319011261015a57803590818452600160205261040860ff8486205416610677565b8184526002602052828420541561045457508252600260205281808080848120818154915581811561044b575b3390f115610441575080f35b51903d90823e3d90fd5b506108fc610435565b606490602084519162461bcd60e51b83528201526014602482015273139bc818985b185b98d9481d1bc81c99599d5b9960621b6044820152fd5b50903461015a57602036600319011261015a578160209360ff923581526001855220541690519015158152f35b8382346104d657816003193601126104d65751478152602090f35b5080fd5b50903461015a578160031936011261015a578035918284526020916001835261050860ff8387205416610677565b8385526002835281852054156105a457508284526002825280842054848352848080806105368682206106f2565b9488825260028852818781205581811561059b575b3390f115610591579160609160a07f69ef08d28de6755b0dfa96d06fd7feb77e8e6d11df32fb22feacacce4eca88f794015191815192835233908301524290820152a280f35b81513d86823e3d90fd5b506108fc61054b565b82606492519162461bcd60e51b835282015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152fd5b50903461015a57602036600319011261015a5760209282913581526002845220549051908152f35b92905034610156576020366003190112610156578161010094823581528060205220908154926001830154916002840154600385015491850154926005860154946007600688015497015497895260208901528701526060860152608085015260a084015260c083015260e0820152f35b1561067e57565b60405162461bcd60e51b8152602060048201526015602482015274115cd8dc9bddc8191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b60405190610100820182811067ffffffffffffffff8211176106dc57604052565b634e487b7160e01b600052604160045260246000fd5b9060076106fd6106bb565b928054845260018101546020850152600281015460408501526003810154606085015260048101546080850152600581015460a0850152600681015460c0850152015460e083015256fea2646970667358221220cbbfb0b99562d7f91644c05d1ee242f6c4dd6b2cb1b9ae2e6c3e882733117cbf64736f6c63430008170033";

type TronDemoEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TronDemoEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TronDemoEscrow__factory extends ContractFactory {
  constructor(...args: TronDemoEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TronDemoEscrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TronDemoEscrow__factory {
    return super.connect(runner) as TronDemoEscrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TronDemoEscrowInterface {
    return new Interface(_abi) as TronDemoEscrowInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TronDemoEscrow {
    return new Contract(address, _abi, runner) as unknown as TronDemoEscrow;
  }
}
