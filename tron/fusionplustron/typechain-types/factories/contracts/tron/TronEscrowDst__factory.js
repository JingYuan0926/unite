"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TronEscrowDst__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint32",
                name: "rescueDelay",
                type: "uint32",
            },
            {
                internalType: "contract IERC20",
                name: "accessToken",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "InvalidCaller",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidImmutables",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidSecret",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidTime",
        type: "error",
    },
    {
        inputs: [],
        name: "NativeTokenSendingFailure",
        type: "error",
    },
    {
        inputs: [],
        name: "SafeTransferFailed",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [],
        name: "EscrowCancelled",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "secret",
                type: "bytes32",
            },
        ],
        name: "EscrowWithdrawal",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "FundsRescued",
        type: "event",
    },
    {
        inputs: [],
        name: "FACTORY",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "PROXY_BYTECODE_HASH",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "RESCUE_DELAY",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "immutables",
                type: "tuple",
            },
        ],
        name: "cancel",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getTronAddress",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "isTronNetwork",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "secret",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "immutables",
                type: "tuple",
            },
        ],
        name: "publicWithdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "immutables",
                type: "tuple",
            },
        ],
        name: "rescueFunds",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "secret",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "hashlock",
                        type: "bytes32",
                    },
                    {
                        internalType: "Address",
                        name: "maker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "taker",
                        type: "uint256",
                    },
                    {
                        internalType: "Address",
                        name: "token",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "safetyDeposit",
                        type: "uint256",
                    },
                    {
                        internalType: "Timelocks",
                        name: "timelocks",
                        type: "uint256",
                    },
                ],
                internalType: "struct IBaseEscrow.Immutables",
                name: "immutables",
                type: "tuple",
            },
        ],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class TronEscrowDst__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(rescueDelay, accessToken, overrides) {
        return super.getDeployTransaction(rescueDelay, accessToken, overrides || {});
    }
    deploy(rescueDelay, accessToken, overrides) {
        return super.deploy(rescueDelay, accessToken, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.TronEscrowDst__factory = TronEscrowDst__factory;
TronEscrowDst__factory.bytecode = _bytecode;
TronEscrowDst__factory.abi = _abi;
//# sourceMappingURL=TronEscrowDst__factory.js.map