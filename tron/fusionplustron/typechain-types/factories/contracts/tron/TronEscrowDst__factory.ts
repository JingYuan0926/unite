/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TronEscrowDst,
  TronEscrowDstInterface,
} from "../../../contracts/tron/TronEscrowDst";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "rescueDelay",
        type: "uint32",
      },
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidImmutables",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecret",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTime",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokenSendingFailure",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EscrowCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "EscrowWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsRescued",
    type: "event",
  },
  {
    inputs: [],
    name: "FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROXY_BYTECODE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESCUE_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTronAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isTronNetwork",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "publicWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e03461009d57601f610df638819003918201601f19168301916001600160401b038311848410176100a257808492604094855283398101031261009d5780519063ffffffff821680920361009d5760200151906001600160a01b038216820361009d573360c05260a052608052604051610d3d90816100b9823960805181610713015260a05181818160a101526103d3015260c051816106410152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e0908435821c9283630616ae57146107a6575082630af97558146106e457826323305703146106705782632dd310001461062b57826334862b6a146105d25782634649088b146103425782635ce2487c1461032557826390d3252f146100c857505063f56cd69c1461008b57600080fd5b346100c457816003193601126100c457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b90915034610321576101003660031901126103215760018060a01b0390816064351693843303610314578135156102c757602435156102845760a435938415610241578151631738921f60e21b81526020818581305afa9081156102375788916101f8575b50156101b55761014b9060e43563ffffffff8160c01c16911c610c05565b42106101a857505060843516918261019a576101679250610c91565b61017360c43533610c91565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b6101a392610c28565b610167565b516337bf561360e11b8152fd5b815162461bcd60e51b8152602081850152601f60248201527f54726f6e457363726f774473743a204e6f742054726f6e206e6574776f726b006044820152606490fd5b90506020813d60201161022f575b8161021360209383610956565b8101031261022b5751801515810361022b573861012d565b8780fd5b3d9150610206565b83513d8a823e3d90fd5b815162461bcd60e51b8152602081850152601d60248201527f54726f6e457363726f774473743a20496e76616c696420616d6f756e740000006044820152606490fd5b906020606492519162461bcd60e51b8352820152601f60248201527f54726f6e457363726f774473743a20496e76616c696420686173686c6f636b006044820152fd5b906020608492519162461bcd60e51b8352820152602160248201527f54726f6e457363726f774473743a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152fd5b516348f5c3ed60e01b8152fd5b8380fd5b505050346100c457816003193601126100c4576020905160018152f35b848483346105ce576101403660031901126105ce576001600160a01b03843581811692908390036105ca57602435916101003660431901126105c65760a4351633036105b6576044351561056957606435156105265760e435156104e3578351631738921f60e21b81526020919082818981305afa9081156104d957879161049f575b501561045c5761012435901c7f000000000000000000000000000000000000000000000000000000000000000001421061044c577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac949550821560001461043c576104308233610c91565b8351928352820152a180f35b610447823385610c28565b610430565b83516337bf561360e11b81528690fd5b845162461bcd60e51b8152808801839052601f60248201527f54726f6e457363726f774473743a204e6f742054726f6e206e6574776f726b006044820152606490fd5b90508281813d83116104d2575b6104b68183610956565b810103126104ce575180151581036104ce57886103c5565b8680fd5b503d6104ac565b86513d89823e3d90fd5b835162461bcd60e51b8152602081880152601d60248201527f54726f6e457363726f774473743a20496e76616c696420616d6f756e740000006044820152606490fd5b835162461bcd60e51b8152602081880152601f60248201527f54726f6e457363726f774473743a20496e76616c696420686173686c6f636b006044820152606490fd5b835162461bcd60e51b8152602081880152602160248201527f54726f6e457363726f774473743a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152608490fd5b83516348f5c3ed60e01b81528690fd5b8580fd5b8480fd5b8280fd5b8484346100c457816003193601126100c45780516020810191308352602082528082019382851067ffffffffffffffff8611176106185750602094508390525190208152f35b634e487b7160e01b815260418652602490fd5b505050346100c457816003193601126100c457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b848483346105ce576106813661092e565b92909160608401356001600160a01b031633036106d457806106b19185013563ffffffff8160801c16911c610c05565b42106106c55750906106c29161098e565b80f35b516337bf561360e11b81528490fd5b81516348f5c3ed60e01b81528690fd5b848483346105ce576106f53661092e565b83516370a0823160e01b8152338782015290939192906020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561079c57869161076a575b50156106d457806106b19185013563ffffffff8160a01c16911c610c05565b90506020813d602011610794575b8161078560209383610956565b810103126105c657518761074b565b3d9150610778565b83513d88823e3d90fd5b915091503461032157836003193601126103215730936060820182811067ffffffffffffffff8211176108f857845260288252602082019284368537602895865b61084e576108408686866108256021845180946108156020830195601560fa1b87525180928585019061090b565b8101036001810185520183610956565b8251938492602084525180928160208601528585019061090b565b601f01601f19168101030190f35b600f81166030908082018092116108e557600a90046027908181029181830414901517156108e5576001600160f81b03199161088a9190610c05565b60f81b1660001988018881116108e557855111156108d257831a601f8886010153811c9580156108bf576000190195866107e7565b634e487b7160e01b835260118252602483fd5b634e487b7160e01b845260328352602484fd5b634e487b7160e01b855260118452602485fd5b634e487b7160e01b825260418452602482fd5b60005b83811061091e5750506000910152565b818101518382015260200161090e565b906101206003198301126109515761010060043592602319011261095157602490565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761097857604052565b634e487b7160e01b600052604160045260246000fd5b9190916109ac60e084013563ffffffff8160c01c169060e01c610c05565b421015610bf357823515610ba45760209081840135938415610b5f5760a08101358015610b1a576040958651631738921f60e21b81528581600481305afa908115610b0f57600091610ad6575b5015610a9257836000528460002003610a815793947fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105949091610a669160c091906001600160a01b03906080830135821680610a6d5750610a5e918684013516610c91565b013533610c91565b51908152a1565b610a7c92878501351690610c28565b610a5e565b855163abab6bd760e01b8152600490fd5b865162461bcd60e51b815260048101869052601f60248201527f54726f6e457363726f774473743a204e6f742054726f6e206e6574776f726b006044820152606490fd5b8681813d8311610b08575b610aeb8183610956565b810103126100c45751908115158203610b055750386109f9565b80fd5b503d610ae1565b88513d6000823e3d90fd5b60405162461bcd60e51b815260048101859052601d60248201527f54726f6e457363726f774473743a20496e76616c696420616d6f756e740000006044820152606490fd5b60405162461bcd60e51b815260048101849052601f60248201527f54726f6e457363726f774473743a20496e76616c696420686173686c6f636b006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f54726f6e457363726f774473743a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152608490fd5b6040516337bf561360e11b8152600490fd5b91908201809211610c1257565b634e487b7160e01b600052601160045260246000fd5b9160446020926000926040519163a9059cbb60e01b83526004830152602482015282855af19081610c6e575b5015610c5c57565b60405163fb7f507960e01b8152600490fd5b90503d15610c895750600160005114601f3d11165b38610c54565b3b1515610c83565b60008080809481945af1903d15610d01573d9067ffffffffffffffff8211610ced5760405191610ccb601f8201601f191660200184610956565b825260203d92013e5b15610cdb57565b604051638a0332d560e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b50610cd456fea264697066735822122018aa13b0086902282e54c6348f4d34fe73f13af34548dcc51747a79739ec4aa664736f6c63430008170033";

type TronEscrowDstConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TronEscrowDstConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TronEscrowDst__factory extends ContractFactory {
  constructor(...args: TronEscrowDstConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      rescueDelay,
      accessToken,
      overrides || {}
    );
  }
  override deploy(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rescueDelay, accessToken, overrides || {}) as Promise<
      TronEscrowDst & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TronEscrowDst__factory {
    return super.connect(runner) as TronEscrowDst__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TronEscrowDstInterface {
    return new Interface(_abi) as TronEscrowDstInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TronEscrowDst {
    return new Contract(address, _abi, runner) as unknown as TronEscrowDst;
  }
}
