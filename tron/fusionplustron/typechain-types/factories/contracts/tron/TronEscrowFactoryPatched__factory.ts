/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TronEscrowFactoryPatched,
  TronEscrowFactoryPatchedInterface,
} from "../../../contracts/tron/TronEscrowFactoryPatched";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "rescueDelaySrc",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "rescueDelayDst",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientEscrowBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "provided",
        type: "uint256",
      },
    ],
    name: "InsufficientNativeValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCreationTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidHashlock",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPartialFill",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecretsAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimingConstraints",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidToken",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFromFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "escrow",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "Address",
        name: "taker",
        type: "uint256",
      },
    ],
    name: "DstEscrowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IBaseEscrow.Immutables",
        name: "srcImmutables",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IEscrowFactory.DstImmutablesComplement",
        name: "dstImmutablesComplement",
        type: "tuple",
      },
    ],
    name: "SrcEscrowCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCESS_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ESCROW_DST_IMPLEMENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ESCROW_SRC_IMPLEMENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "addressOfEscrowDst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "addressOfEscrowSrc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "dstImmutables",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "srcCancellationTimestamp",
        type: "uint256",
      },
    ],
    name: "createDstEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
    ],
    name: "debugComputeAddress",
    outputs: [
      {
        internalType: "address",
        name: "computed",
        type: "address",
      },
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "emergencyRescue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFactoryConfig",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "feeToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTronChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isTronFactory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101603462000249576001600160401b03601f62002c3938819003918201601f1916840191908383118584101762000233578160c09286926040958652833981010312620002495762000052836200024e565b5062000061602084016200024e565b906200006f8185016200024e565b926200007e606086016200024e565b946200009b60a0620000936080840162000263565b920162000263565b916101009687526101209580875261014095865284519261104e808501908582108583111762000233578592620000f492859262001beb863963ffffffff90911681526001600160a01b03909116602082015260400190565b0360009384f093841562000229576001600160a01b03948516608052855192610df680850191821185831017620002155791849391620001549362000df5863963ffffffff90911681526001600160a01b03909116602082015260400190565b039082f09081156200020a5750908062000188921660a0526200017b816080511662000275565b60c05260a0511662000275565b60e0525191610b059384620002f0853960805184610876015260a0518481816103a20152818161040801526107b1015260c0518460dc015260e05184818161043d0152818161047601526107760152518381816101530152818161090a01526109910152518281816108bb015261092f01525181818161083101526109560152f35b8351903d90823e3d90fd5b634e487b7160e01b86526041600452602486fd5b85513d85823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036200024957565b519063ffffffff821682036200024957565b6040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000060208201908152606092831b6001600160601b03191660348301526e5af43d82803e903d91602b57fd5bf360881b6048830152603782529181016001600160401b0381118282101762000233576040525190209056fe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163117803e31461097d5750806315903763146108ea5780633eb5002a146108a55780637040f1731461086057806373717b081461081b5780637662e8d7146107ff578063948ca97c146107e0578063ba5511771461079b578063be58e91c1461074e578063dea024e4146102c6578063dee3d5dc1461028c578063eee469ad146101165763fb6bd47e0361000f57346101135761010090816003193601126101135760206101018360405181600482372030907f000000000000000000000000000000000000000000000000000000000000000090610a1b565b6040516001600160a01b039091168152f35b80fd5b5034610113576060366003190112610113576004356001600160a01b038181169182900361028857602435906044359080821690818303610284577f00000000000000000000000000000000000000000000000000000000000000001633036102725715610260578392806101f8575082809281925af13d156101f3573d67ffffffffffffffff81116101df57604051906101bb601f8201601f1916602001836109e3565b81528260203d92013e5b156101cd5780f35b604051633d2cec6f60e21b8152600490fd5b634e487b7160e01b83526041600452602483fd5b6101c5565b92906044906020936040519163a9059cbb60e01b83526004830152602482015282855af1908161023e575b501561022c5780f35b60405163fb7f507960e01b8152600490fd5b90503d1561025857506001815114601f3d11165b38610223565b3b1515610252565b604051634e46966960e11b8152600490fd5b604051635fc483c560e01b8152600490fd5b8580fd5b8280fd5b50346101135760403660031901126101135760406102af30602435600435610a1b565b81516001600160a01b039091168152306020820152f35b503660031901610120811261074a5761010080911261074a5760a4359081156107385760243515610726576084359060c43580846001600160a01b03851615610717575b508034106106f957506040519382850185811067ffffffffffffffff8211176106e557604052600435855260243560208601526044356040860152606435606086015283608086015260a085015260c08401524260e01b60018060e01b0360e43516178060e085015261038e610104359163ffffffff8160c01c169060e01c6109c0565b116106d3578220916040516103d8816103ca7f000000000000000000000000000000000000000000000000000000000000000060208301610a7d565b03601f1981018352826109e3565b80511561068e578051849160200134f5926001600160a01b03841615610637576040516020810161043b8261042d7f000000000000000000000000000000000000000000000000000000000000000084610a7d565b03601f1981018452836109e3565b7f000000000000000000000000000000000000000000000000000000000000000091519020036105e0576001600160a01b039061049b9030907f000000000000000000000000000000000000000000000000000000000000000090610a1b565b166001600160a01b0384160361058f5783906001600160a01b038316610503575b507fc30e111dcc74fddc2c3a4d98ffb97adec4485c0a687946bf5b22c2a99c7ff96d6060846040519060018060a01b0316815260243560208201526064356040820152a180f35b60a001516040516323b872dd60e01b815233600482015260248101859052604481019190915260209190606490826001600160a01b0386165af19081610564575b5015610552573882816104bc565b60405163f405907160e01b8152600490fd5b90503d1561057e57506001825114601f3d11165b38610544565b6001600160a01b03163b1515610578565b60405162461bcd60e51b815260206004820152602360248201527f54726f6e457363726f77466163746f72793a2041646472657373206d69736d616044820152620e8c6d60eb1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602960248201527f54726f6e457363726f77466163746f72793a2042797465636f64652068617368604482015268040dad2e6dac2e8c6d60bb1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602960248201527f54726f6e437265617465324c69623a2043726561746532206465706c6f796d656044820152681b9d0819985a5b195960ba1b6064820152608490fd5b60405162461bcd60e51b815260206004820152601e60248201527f54726f6e437265617465324c69623a20456d7074792062797465636f646500006044820152606490fd5b60405163300eae0b60e11b8152600490fd5b634e487b7160e01b87526041600452602487fd5b604490604051906303ba5fc360e01b82526004820152346024820152fd5b610720916109c0565b8461030a565b604051632e0755ab60e01b8152600490fd5b60405163162908e360e11b8152600490fd5b5080fd5b50346101135761010090816003193601126101135760206101018360405181600482372030907f000000000000000000000000000000000000000000000000000000000000000090610a1b565b50346101135780600319360112610113576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610113578060031936011261011357602060405163cd8690dc8152f35b5034610113578060031936011261011357602060405160018152f35b50346101135780600319360112610113576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101135780600319360112610113576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101135780600319360112610113576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610113578060031936011261011357606060405160018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000168252807f00000000000000000000000000000000000000000000000000000000000000001660208301527f0000000000000000000000000000000000000000000000000000000000000000166040820152f35b90503461074a578160031936011261074a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919082018092116109cd57565b634e487b7160e01b600052601160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a0557604052565b634e487b7160e01b600052604160045260246000fd5b9190604051926020840192604160f81b84526bffffffffffffffffffffffff199060601b16602185015260358401526055830152605582526080820182811067ffffffffffffffff821117610a0557604052905190206001600160a01b031690565b733d602d80600a3d3981f3363d3d373d3d3d363d7360601b815260609190911b6bffffffffffffffffffffffff191660148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037019056fea264697066735822122016af8ccf5fb86336c7e33b43abb5e472206da9d889f2d13606500b81a353b72864736f6c6343000817003360e03461009d57601f610df638819003918201601f19168301916001600160401b038311848410176100a257808492604094855283398101031261009d5780519063ffffffff821680920361009d5760200151906001600160a01b038216820361009d573360c05260a052608052604051610d3d90816100b9823960805181610713015260a05181818160a101526103d3015260c051816106410152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e0908435821c9283630616ae57146107a6575082630af97558146106e457826323305703146106705782632dd310001461062b57826334862b6a146105d25782634649088b146103425782635ce2487c1461032557826390d3252f146100c857505063f56cd69c1461008b57600080fd5b346100c457816003193601126100c457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b90915034610321576101003660031901126103215760018060a01b0390816064351693843303610314578135156102c757602435156102845760a435938415610241578151631738921f60e21b81526020818581305afa9081156102375788916101f8575b50156101b55761014b9060e43563ffffffff8160c01c16911c610c05565b42106101a857505060843516918261019a576101679250610c91565b61017360c43533610c91565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b6101a392610c28565b610167565b516337bf561360e11b8152fd5b815162461bcd60e51b8152602081850152601f60248201527f54726f6e457363726f774473743a204e6f742054726f6e206e6574776f726b006044820152606490fd5b90506020813d60201161022f575b8161021360209383610956565b8101031261022b5751801515810361022b573861012d565b8780fd5b3d9150610206565b83513d8a823e3d90fd5b815162461bcd60e51b8152602081850152601d60248201527f54726f6e457363726f774473743a20496e76616c696420616d6f756e740000006044820152606490fd5b906020606492519162461bcd60e51b8352820152601f60248201527f54726f6e457363726f774473743a20496e76616c696420686173686c6f636b006044820152fd5b906020608492519162461bcd60e51b8352820152602160248201527f54726f6e457363726f774473743a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152fd5b516348f5c3ed60e01b8152fd5b8380fd5b505050346100c457816003193601126100c4576020905160018152f35b848483346105ce576101403660031901126105ce576001600160a01b03843581811692908390036105ca57602435916101003660431901126105c65760a4351633036105b6576044351561056957606435156105265760e435156104e3578351631738921f60e21b81526020919082818981305afa9081156104d957879161049f575b501561045c5761012435901c7f000000000000000000000000000000000000000000000000000000000000000001421061044c577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac949550821560001461043c576104308233610c91565b8351928352820152a180f35b610447823385610c28565b610430565b83516337bf561360e11b81528690fd5b845162461bcd60e51b8152808801839052601f60248201527f54726f6e457363726f774473743a204e6f742054726f6e206e6574776f726b006044820152606490fd5b90508281813d83116104d2575b6104b68183610956565b810103126104ce575180151581036104ce57886103c5565b8680fd5b503d6104ac565b86513d89823e3d90fd5b835162461bcd60e51b8152602081880152601d60248201527f54726f6e457363726f774473743a20496e76616c696420616d6f756e740000006044820152606490fd5b835162461bcd60e51b8152602081880152601f60248201527f54726f6e457363726f774473743a20496e76616c696420686173686c6f636b006044820152606490fd5b835162461bcd60e51b8152602081880152602160248201527f54726f6e457363726f774473743a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152608490fd5b83516348f5c3ed60e01b81528690fd5b8580fd5b8480fd5b8280fd5b8484346100c457816003193601126100c45780516020810191308352602082528082019382851067ffffffffffffffff8611176106185750602094508390525190208152f35b634e487b7160e01b815260418652602490fd5b505050346100c457816003193601126100c457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b848483346105ce576106813661092e565b92909160608401356001600160a01b031633036106d457806106b19185013563ffffffff8160801c16911c610c05565b42106106c55750906106c29161098e565b80f35b516337bf561360e11b81528490fd5b81516348f5c3ed60e01b81528690fd5b848483346105ce576106f53661092e565b83516370a0823160e01b8152338782015290939192906020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561079c57869161076a575b50156106d457806106b19185013563ffffffff8160a01c16911c610c05565b90506020813d602011610794575b8161078560209383610956565b810103126105c657518761074b565b3d9150610778565b83513d88823e3d90fd5b915091503461032157836003193601126103215730936060820182811067ffffffffffffffff8211176108f857845260288252602082019284368537602895865b61084e576108408686866108256021845180946108156020830195601560fa1b87525180928585019061090b565b8101036001810185520183610956565b8251938492602084525180928160208601528585019061090b565b601f01601f19168101030190f35b600f81166030908082018092116108e557600a90046027908181029181830414901517156108e5576001600160f81b03199161088a9190610c05565b60f81b1660001988018881116108e557855111156108d257831a601f8886010153811c9580156108bf576000190195866107e7565b634e487b7160e01b835260118252602483fd5b634e487b7160e01b845260328352602484fd5b634e487b7160e01b855260118452602485fd5b634e487b7160e01b825260418452602482fd5b60005b83811061091e5750506000910152565b818101518382015260200161090e565b906101206003198301126109515761010060043592602319011261095157602490565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761097857604052565b634e487b7160e01b600052604160045260246000fd5b9190916109ac60e084013563ffffffff8160c01c169060e01c610c05565b421015610bf357823515610ba45760209081840135938415610b5f5760a08101358015610b1a576040958651631738921f60e21b81528581600481305afa908115610b0f57600091610ad6575b5015610a9257836000528460002003610a815793947fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105949091610a669160c091906001600160a01b03906080830135821680610a6d5750610a5e918684013516610c91565b013533610c91565b51908152a1565b610a7c92878501351690610c28565b610a5e565b855163abab6bd760e01b8152600490fd5b865162461bcd60e51b815260048101869052601f60248201527f54726f6e457363726f774473743a204e6f742054726f6e206e6574776f726b006044820152606490fd5b8681813d8311610b08575b610aeb8183610956565b810103126100c45751908115158203610b055750386109f9565b80fd5b503d610ae1565b88513d6000823e3d90fd5b60405162461bcd60e51b815260048101859052601d60248201527f54726f6e457363726f774473743a20496e76616c696420616d6f756e740000006044820152606490fd5b60405162461bcd60e51b815260048101849052601f60248201527f54726f6e457363726f774473743a20496e76616c696420686173686c6f636b006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f54726f6e457363726f774473743a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152608490fd5b6040516337bf561360e11b8152600490fd5b91908201809211610c1257565b634e487b7160e01b600052601160045260246000fd5b9160446020926000926040519163a9059cbb60e01b83526004830152602482015282855af19081610c6e575b5015610c5c57565b60405163fb7f507960e01b8152600490fd5b90503d15610c895750600160005114601f3d11165b38610c54565b3b1515610c83565b60008080809481945af1903d15610d01573d9067ffffffffffffffff8211610ced5760405191610ccb601f8201601f191660200184610956565b825260203d92013e5b15610cdb57565b604051638a0332d560e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b50610cd456fea264697066735822122018aa13b0086902282e54c6348f4d34fe73f13af34548dcc51747a79739ec4aa664736f6c6343000817003360e0346100a457601f61104e38819003918201601f19168301916001600160401b038311848410176100a95780849260409485528339810103126100a45780519063ffffffff82168092036100a45760200151906001600160a01b03821682036100a4573360c05260a052608052604051610f8e90816100c082396080518181816101160152610689015260a05181818160b7015261042b015260c0518161053d0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e0908435821c9283630616ae57146107da575082630af9755814610651578263233057031461056c5782632dd310001461052757826334862b6a146104ce5782634649088b146103d55782635ce2487c146103b85782636c10c0c81461027b57826390d3252f1461023b578263daff233e146100de57505063f56cd69c146100a157600080fd5b346100da57816003193601126100da57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b91509134610237576101003660031901126102375780516370a0823160e01b815233838201526001600160a01b0393906020816024817f000000000000000000000000000000000000000000000000000000000000000089165afa90811561022d5786916101f7575b50156101e9576101659060e43563ffffffff8160601c16911c6109c2565b42106101dc575050610175610b92565b608435811690816101c557610192915060a4359060443516610ee2565b61019e60c43533610ee2565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b6101d79160a435916044351690610e79565b610192565b516337bf561360e11b8152fd5b50516348f5c3ed60e01b8152fd5b90506020813d602011610225575b816102126020938361098a565b81010312610221575138610147565b8580fd5b3d9150610205565b83513d88823e3d90fd5b8380fd5b9150913461023757610100366003190112610237576001600160a01b0392606435841633036101e9576101659060e43563ffffffff81851c16911c6109c2565b90929150346102375761014036600319011261023757803592602435916001600160a01b039182841684036103b4576101003660431901126103b4578260a4351633036103a5576101243580911c9063ffffffff906102dc828216846109c2565b421061039557906102f19291871c16906109c2565b421015610387576103006109e5565b84865260208620606435036103795750917fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105939160209360c43516801560001461036757506103529060e43590610ee2565b61035f6101043533610ee2565b51908152a180f35b6103749160e43591610e79565b610352565b835163abab6bd760e01b8152fd5b83516337bf561360e11b8152fd5b86516337bf561360e11b81528490fd5b5083516348f5c3ed60e01b8152fd5b8680fd5b505050346100da57816003193601126100da576020905160018152f35b848483346104ca576101403660031901126104ca576001600160a01b03843581811692908390036104c657602435916101003660431901126102215760a4351633036104b6576104236109e5565b61012435901c7f00000000000000000000000000000000000000000000000000000000000000000142106104a6577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac9394508115600014610496576104888133610ee2565b82519182526020820152a180f35b6104a1813384610e79565b610488565b82516337bf561360e11b81528590fd5b83516348f5c3ed60e01b81528690fd5b8480fd5b8280fd5b8484346100da57816003193601126100da5780516020810191308352602082528082019382851067ffffffffffffffff8611176105145750602094508390525190208152f35b634e487b7160e01b815260418652602490fd5b505050346100da57816003193601126100da57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b929150346102375761057d36610962565b909390916001600160a01b0391906060840135831633036103a5578084013580911c9063ffffffff906105b2828216846109c2565b421061039557906105c79291871c16906109c2565b421015610387576105d783610d2d565b8486526020862060208401350361037957509161035f60c08360209560807fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171059896013516801560001461063b575061063360a082013533610ee2565b013533610ee2565b61064c9060a0830135903390610e79565b610633565b849250346104ca5761066236610962565b94909160018060a01b038251946370a0823160e01b865233838701526020958681602481867f0000000000000000000000000000000000000000000000000000000000000000165afa9081156107d057889161079f575b501561078f578088013580911c9063ffffffff906106db82828a1c16846109c2565b421061077f57906106f09291861c16906109c2565b42101561077057806060880135169161070888610d2d565b848752858720868901350361037957508661035f9260c09260807fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105999a013516801560001461076157506106339060a083013590610ee2565b61064c9160a084013591610e79565b5090516337bf561360e11b8152fd5b85516337bf561360e11b81528590fd5b83516348f5c3ed60e01b81528390fd5b90508681813d83116107c9575b6107b6818361098a565b810103126107c55751896106b9565b8780fd5b503d6107ac565b85513d8a823e3d90fd5b915091503461023757836003193601126102375730936060820182811067ffffffffffffffff82111761092c57845260288252602082019284368537602895865b610882576108748686866108596021845180946108496020830195601560fa1b87525180928585019061093f565b810103600181018552018361098a565b8251938492602084525180928160208601528585019061093f565b601f01601f19168101030190f35b600f811660309080820180921161091957600a9004602790818102918183041490151715610919576001600160f81b0319916108be91906109c2565b60f81b166000198801888111610919578551111561090657831a601f8886010153811c9580156108f35760001901958661081b565b634e487b7160e01b835260118252602483fd5b634e487b7160e01b845260328352602484fd5b634e487b7160e01b855260118452602485fd5b634e487b7160e01b825260418452602482fd5b60005b8381106109525750506000910152565b8181015183820152602001610942565b906101206003198301126109855761010060043592602319011261098557602490565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176109ac57604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116109cf57565b634e487b7160e01b600052601160045260246000fd5b60443515610b435760643515610afe5760e43515610ab957604051631738921f60e21b8152602081600481305afa908115610aad57600091610a6f575b5015610a2a57565b60405162461bcd60e51b815260206004820152601f60248201527f54726f6e457363726f775372633a204e6f742054726f6e206e6574776f726b006044820152606490fd5b6020813d602011610aa5575b81610a886020938361098a565b810103126100da5751908115158203610aa2575038610a22565b80fd5b3d9150610a7b565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601d60248201527f54726f6e457363726f775372633a20496e76616c696420616d6f756e740000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f54726f6e457363726f775372633a20496e76616c696420686173686c6f636b006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f54726f6e457363726f775372633a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152608490fd5b6004803515610cdf5760243515610c9b5760a43515610c5757604051631738921f60e21b81526020818381305afa908115610aad57600091610c1c575b5015610bd85750565b60649060206040519162461bcd60e51b8352820152601f60248201527f54726f6e457363726f775372633a204e6f742054726f6e206e6574776f726b006044820152fd5b6020813d602011610c4f575b81610c356020938361098a565b810103126100da5751908115158203610aa2575038610bcf565b3d9150610c28565b60649060206040519162461bcd60e51b8352820152601d60248201527f54726f6e457363726f775372633a20496e76616c696420616d6f756e740000006044820152fd5b60649060206040519162461bcd60e51b8352820152601f60248201527f54726f6e457363726f775372633a20496e76616c696420686173686c6f636b006044820152fd5b60849060206040519162461bcd60e51b8352820152602160248201527f54726f6e457363726f775372633a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152fd5b803515610b43576020908181013515610e345760a0013515610df057604051631738921f60e21b81528181600481305afa908115610aad57600091610dba575b5015610d765750565b6064906040519062461bcd60e51b82526004820152601f60248201527f54726f6e457363726f775372633a204e6f742054726f6e206e6574776f726b006044820152fd5b8281813d8311610de9575b610dcf818361098a565b810103126100da5751908115158203610aa2575038610d6d565b503d610dc5565b6064906040519062461bcd60e51b82526004820152601d60248201527f54726f6e457363726f775372633a20496e76616c696420616d6f756e740000006044820152fd5b60405162461bcd60e51b815260048101839052601f60248201527f54726f6e457363726f775372633a20496e76616c696420686173686c6f636b006044820152606490fd5b9160446020926000926040519163a9059cbb60e01b83526004830152602482015282855af19081610ebf575b5015610ead57565b60405163fb7f507960e01b8152600490fd5b90503d15610eda5750600160005114601f3d11165b38610ea5565b3b1515610ed4565b60008080809481945af1903d15610f52573d9067ffffffffffffffff8211610f3e5760405191610f1c601f8201601f19166020018461098a565b825260203d92013e5b15610f2c57565b604051638a0332d560e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b50610f2556fea26469706673582212208d0bd962e91fada8cc29b41d3926c7fac7acaf2dfe7b84f32a91181ddc28372564736f6c63430008170033";

type TronEscrowFactoryPatchedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TronEscrowFactoryPatchedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TronEscrowFactoryPatched__factory extends ContractFactory {
  constructor(...args: TronEscrowFactoryPatchedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    arg0: AddressLike,
    feeToken: AddressLike,
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelaySrc: BigNumberish,
    rescueDelayDst: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      arg0,
      feeToken,
      accessToken,
      owner,
      rescueDelaySrc,
      rescueDelayDst,
      overrides || {}
    );
  }
  override deploy(
    arg0: AddressLike,
    feeToken: AddressLike,
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelaySrc: BigNumberish,
    rescueDelayDst: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      arg0,
      feeToken,
      accessToken,
      owner,
      rescueDelaySrc,
      rescueDelayDst,
      overrides || {}
    ) as Promise<
      TronEscrowFactoryPatched & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TronEscrowFactoryPatched__factory {
    return super.connect(runner) as TronEscrowFactoryPatched__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TronEscrowFactoryPatchedInterface {
    return new Interface(_abi) as TronEscrowFactoryPatchedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TronEscrowFactoryPatched {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TronEscrowFactoryPatched;
  }
}
