/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TronEscrowFactory,
  TronEscrowFactoryInterface,
} from "../../../contracts/tron/TronEscrowFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "rescueDelaySrc",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "rescueDelayDst",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientEscrowBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCreationTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPartialFill",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecretsAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeTransferFromFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "escrow",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "Address",
        name: "taker",
        type: "uint256",
      },
    ],
    name: "DstEscrowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IBaseEscrow.Immutables",
        name: "srcImmutables",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IEscrowFactory.DstImmutablesComplement",
        name: "dstImmutablesComplement",
        type: "tuple",
      },
    ],
    name: "SrcEscrowCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCESS_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ESCROW_DST_IMPLEMENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ESCROW_SRC_IMPLEMENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FEE_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "addressOfEscrowDst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "addressOfEscrowSrc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "dstImmutables",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "srcCancellationTimestamp",
        type: "uint256",
      },
    ],
    name: "createDstEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "emergencyRescue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFactoryConfig",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "feeToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTronChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isTronFactory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610160346200029f576001600160401b03601f62002b4638819003918201601f1916840191908383118584101762000289578160c092869260409586528339810103126200029f576200005283620002a4565b506200006160208401620002a4565b906200006f818501620002a4565b926200007e60608601620002a4565b946200009b60a06200009360808401620002b9565b9201620002b9565b916101009687526101209580875261014095865284519261104e808501908582108583111762000289578592620000f492859262001af8863963ffffffff90911681526001600160a01b03909116602082015260400190565b0360009384f09384156200027f576001600160a01b03948516608052855192610df6808501918211858310176200026b5791849391620001549362000d02863963ffffffff90911681526001600160a01b03909116602082015260400190565b039082f0908115620002605750811660a0526080516e5af43d82803e903d91602b57fd5bf36020528116601181905260881c763d602d80600a3d3981f3363d3d373d3d3d363d73000000176000526037600920620001f3919060c05260a05116763d602d80600a3d3981f3363d3d373d3d3d363d73000000906e5af43d82803e903d91602b57fd5bf36020528060115260881c17600052603760092090565b60e0525191610a369384620002cc853960805184610806015260a0518481816103d6015261073f015260c0518460d5015260e0518461070501525183818161015201528181610897015261092401525182818161084a01526108bc0152518181816107c201526108e40152f35b8351903d90823e3d90fd5b634e487b7160e01b86526041600452602486fd5b85513d85823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036200029f57565b519063ffffffff821682036200029f5756fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c908163117803e3146109105750806315903763146108795780633eb5002a146108355780637040f173146107f157806373717b08146107ad5780637662e8d714610791578063948ca97c14610772578063ba5511771461072a578063be58e91c146106dd578063dea024e4146102ee578063eee469ad146101125763fb6bd47e03610011573461010e57610100928360031936011261010b5750826100fa9160209484519182372030907f0000000000000000000000000000000000000000000000000000000000000000906109d7565b90516001600160a01b039091168152f35b80fd5b8280fd5b50903461010e57606036600319011261010e576001600160a01b03908235828116908190036102ea5760249283359160443591808316908184036102e6577f00000000000000000000000000000000000000000000000000000000000000001633036102a457156102555786929190806101f0575082809281925af1610196610976565b50156101a25750505080f35b60849350602090519262461bcd60e51b8452830152808201527f54726f6e457363726f77466163746f72793a20545258207265736375652066616044820152631a5b195960e21b6064820152fd5b93949083926044926020955087519263a9059cbb60e01b84528984015282015282855af19081610233575b501561022657505080f35b5163fb7f507960e01b8152fd5b90503d1561024d57506001835114601f3d11165b3861021b565b3b1515610247565b835162461bcd60e51b81526020818801528086018690527f54726f6e457363726f77466163746f72793a20496e76616c69642072656369706044820152631a595b9d60e21b6064820152608490fd5b845162461bcd60e51b8152602081890152601d818801527f54726f6e457363726f77466163746f72793a204f6e6c79206f776e65720000006044820152606490fd5b8880fd5b8480fd5b509036600319019061012082126106d9576101008092126106d95760a43592831561068d57602492833591821561063f576084359460018060a01b0390818716918860c435958685159b8c610630575b5034106105d957885181810181811067ffffffffffffffff8211176105c7578a528635815260209789898301526044358b8301526064359b8c6060840152608083015260a0820193845260c08201524260e01b60018060e01b0360e43516178060e08301526103be610104359163ffffffff8160c01c169060e01c610953565b1161056f57206e5af43d82803e903d91602b57fd5bf37f00000000000000000000000000000000000000000000000000000000000000008d763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8360881c1617905260781b178752603760098df5918216998a1561055f57908b939291346104e8575b15610479575b837fc30e111dcc74fddc2c3a4d98ffb97adec4485c0a687946bf5b22c2a99c7ff96d60608d8d8d8d8d8251948552840152820152a180f35b5188516323b872dd60e01b8152338782015292830191909152604482015284919060649082855af190816104c6575b50156104b8578087818080610441565b835163f405907160e01b8152fd5b90503d156104e057506001875114601f3d11165b386104a8565b3b15156104da565b9091929380808034875af16104fb610976565b501561050b57908b93929161043b565b885162461bcd60e51b81528087018890526029818601527f54726f6e457363726f77466163746f72793a204e6174697665207472616e7366604482015268195c8819985a5b195960ba1b6064820152608490fd5b885163b06ebf3d60e01b81528690fd5b895162461bcd60e51b8152808801899052602d818701527f54726f6e457363726f77466163746f72793a20496e76616c69642074696d696e60448201526c6720636f6e73747261696e747360981b6064820152608490fd5b634e487b7160e01b8e5260418852858efd5b885162461bcd60e51b8152602081880152602c818601527f54726f6e457363726f77466163746f72793a20496e73756666696369656e742060448201526b6e61746976652076616c756560a01b6064820152608490fd5b61063991610953565b8261033e565b608490602386602087519362461bcd60e51b85528401528201527f54726f6e457363726f77466163746f72793a20496e76616c696420686173686c6044820152626f636b60e81b6064820152fd5b6020608492519162461bcd60e51b8352820152602160248201527f54726f6e457363726f77466163746f72793a20496e76616c696420616d6f756e6044820152601d60fa1b6064820152fd5b8380fd5b503461010e57610100928360031936011261010b5750826100fa9160209484519182372030907f0000000000000000000000000000000000000000000000000000000000000000906109d7565b50503461076e578160031936011261076e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b50503461076e578160031936011261076e576020905163cd8690dc8152f35b50503461076e578160031936011261076e576020905160018152f35b50503461076e578160031936011261076e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50503461076e578160031936011261076e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50503461076e578160031936011261076e57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50503461076e578160031936011261076e5780516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811682527f0000000000000000000000000000000000000000000000000000000000000000811660208301527f00000000000000000000000000000000000000000000000000000000000000001691810191909152606090f35b84903461076e578160031936011261076e577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9190820180921161096057565b634e487b7160e01b600052601160045260246000fd5b3d156109d25767ffffffffffffffff903d8281116109bc5760405192601f8201601f19908116603f01168401908111848210176109bc5760405282523d6000602084013e565b634e487b7160e01b600052604160045260246000fd5b606090565b91600b92604051926040840152602083015281520160ff8153605590206001600160a01b03169056fea2646970667358221220a42a7f731fda33c9a8fd05d6d3c13ee0898ad681748c5205b0fea4069c8db0d364736f6c6343000817003360e03461009d57601f610df638819003918201601f19168301916001600160401b038311848410176100a257808492604094855283398101031261009d5780519063ffffffff821680920361009d5760200151906001600160a01b038216820361009d573360c05260a052608052604051610d3d90816100b9823960805181610713015260a05181818160a101526103d3015260c051816106410152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e0908435821c9283630616ae57146107a6575082630af97558146106e457826323305703146106705782632dd310001461062b57826334862b6a146105d25782634649088b146103425782635ce2487c1461032557826390d3252f146100c857505063f56cd69c1461008b57600080fd5b346100c457816003193601126100c457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b90915034610321576101003660031901126103215760018060a01b0390816064351693843303610314578135156102c757602435156102845760a435938415610241578151631738921f60e21b81526020818581305afa9081156102375788916101f8575b50156101b55761014b9060e43563ffffffff8160c01c16911c610c05565b42106101a857505060843516918261019a576101679250610c91565b61017360c43533610c91565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b6101a392610c28565b610167565b516337bf561360e11b8152fd5b815162461bcd60e51b8152602081850152601f60248201527f54726f6e457363726f774473743a204e6f742054726f6e206e6574776f726b006044820152606490fd5b90506020813d60201161022f575b8161021360209383610956565b8101031261022b5751801515810361022b573861012d565b8780fd5b3d9150610206565b83513d8a823e3d90fd5b815162461bcd60e51b8152602081850152601d60248201527f54726f6e457363726f774473743a20496e76616c696420616d6f756e740000006044820152606490fd5b906020606492519162461bcd60e51b8352820152601f60248201527f54726f6e457363726f774473743a20496e76616c696420686173686c6f636b006044820152fd5b906020608492519162461bcd60e51b8352820152602160248201527f54726f6e457363726f774473743a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152fd5b516348f5c3ed60e01b8152fd5b8380fd5b505050346100c457816003193601126100c4576020905160018152f35b848483346105ce576101403660031901126105ce576001600160a01b03843581811692908390036105ca57602435916101003660431901126105c65760a4351633036105b6576044351561056957606435156105265760e435156104e3578351631738921f60e21b81526020919082818981305afa9081156104d957879161049f575b501561045c5761012435901c7f000000000000000000000000000000000000000000000000000000000000000001421061044c577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac949550821560001461043c576104308233610c91565b8351928352820152a180f35b610447823385610c28565b610430565b83516337bf561360e11b81528690fd5b845162461bcd60e51b8152808801839052601f60248201527f54726f6e457363726f774473743a204e6f742054726f6e206e6574776f726b006044820152606490fd5b90508281813d83116104d2575b6104b68183610956565b810103126104ce575180151581036104ce57886103c5565b8680fd5b503d6104ac565b86513d89823e3d90fd5b835162461bcd60e51b8152602081880152601d60248201527f54726f6e457363726f774473743a20496e76616c696420616d6f756e740000006044820152606490fd5b835162461bcd60e51b8152602081880152601f60248201527f54726f6e457363726f774473743a20496e76616c696420686173686c6f636b006044820152606490fd5b835162461bcd60e51b8152602081880152602160248201527f54726f6e457363726f774473743a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152608490fd5b83516348f5c3ed60e01b81528690fd5b8580fd5b8480fd5b8280fd5b8484346100c457816003193601126100c45780516020810191308352602082528082019382851067ffffffffffffffff8611176106185750602094508390525190208152f35b634e487b7160e01b815260418652602490fd5b505050346100c457816003193601126100c457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b848483346105ce576106813661092e565b92909160608401356001600160a01b031633036106d457806106b19185013563ffffffff8160801c16911c610c05565b42106106c55750906106c29161098e565b80f35b516337bf561360e11b81528490fd5b81516348f5c3ed60e01b81528690fd5b848483346105ce576106f53661092e565b83516370a0823160e01b8152338782015290939192906020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561079c57869161076a575b50156106d457806106b19185013563ffffffff8160a01c16911c610c05565b90506020813d602011610794575b8161078560209383610956565b810103126105c657518761074b565b3d9150610778565b83513d88823e3d90fd5b915091503461032157836003193601126103215730936060820182811067ffffffffffffffff8211176108f857845260288252602082019284368537602895865b61084e576108408686866108256021845180946108156020830195601560fa1b87525180928585019061090b565b8101036001810185520183610956565b8251938492602084525180928160208601528585019061090b565b601f01601f19168101030190f35b600f81166030908082018092116108e557600a90046027908181029181830414901517156108e5576001600160f81b03199161088a9190610c05565b60f81b1660001988018881116108e557855111156108d257831a601f8886010153811c9580156108bf576000190195866107e7565b634e487b7160e01b835260118252602483fd5b634e487b7160e01b845260328352602484fd5b634e487b7160e01b855260118452602485fd5b634e487b7160e01b825260418452602482fd5b60005b83811061091e5750506000910152565b818101518382015260200161090e565b906101206003198301126109515761010060043592602319011261095157602490565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761097857604052565b634e487b7160e01b600052604160045260246000fd5b9190916109ac60e084013563ffffffff8160c01c169060e01c610c05565b421015610bf357823515610ba45760209081840135938415610b5f5760a08101358015610b1a576040958651631738921f60e21b81528581600481305afa908115610b0f57600091610ad6575b5015610a9257836000528460002003610a815793947fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105949091610a669160c091906001600160a01b03906080830135821680610a6d5750610a5e918684013516610c91565b013533610c91565b51908152a1565b610a7c92878501351690610c28565b610a5e565b855163abab6bd760e01b8152600490fd5b865162461bcd60e51b815260048101869052601f60248201527f54726f6e457363726f774473743a204e6f742054726f6e206e6574776f726b006044820152606490fd5b8681813d8311610b08575b610aeb8183610956565b810103126100c45751908115158203610b055750386109f9565b80fd5b503d610ae1565b88513d6000823e3d90fd5b60405162461bcd60e51b815260048101859052601d60248201527f54726f6e457363726f774473743a20496e76616c696420616d6f756e740000006044820152606490fd5b60405162461bcd60e51b815260048101849052601f60248201527f54726f6e457363726f774473743a20496e76616c696420686173686c6f636b006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f54726f6e457363726f774473743a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152608490fd5b6040516337bf561360e11b8152600490fd5b91908201809211610c1257565b634e487b7160e01b600052601160045260246000fd5b9160446020926000926040519163a9059cbb60e01b83526004830152602482015282855af19081610c6e575b5015610c5c57565b60405163fb7f507960e01b8152600490fd5b90503d15610c895750600160005114601f3d11165b38610c54565b3b1515610c83565b60008080809481945af1903d15610d01573d9067ffffffffffffffff8211610ced5760405191610ccb601f8201601f191660200184610956565b825260203d92013e5b15610cdb57565b604051638a0332d560e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b50610cd456fea264697066735822122018aa13b0086902282e54c6348f4d34fe73f13af34548dcc51747a79739ec4aa664736f6c6343000817003360e0346100a457601f61104e38819003918201601f19168301916001600160401b038311848410176100a95780849260409485528339810103126100a45780519063ffffffff82168092036100a45760200151906001600160a01b03821682036100a4573360c05260a052608052604051610f8e90816100c082396080518181816101160152610689015260a05181818160b7015261042b015260c0518161053d0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b60009260e0908435821c9283630616ae57146107da575082630af9755814610651578263233057031461056c5782632dd310001461052757826334862b6a146104ce5782634649088b146103d55782635ce2487c146103b85782636c10c0c81461027b57826390d3252f1461023b578263daff233e146100de57505063f56cd69c146100a157600080fd5b346100da57816003193601126100da57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b91509134610237576101003660031901126102375780516370a0823160e01b815233838201526001600160a01b0393906020816024817f000000000000000000000000000000000000000000000000000000000000000089165afa90811561022d5786916101f7575b50156101e9576101659060e43563ffffffff8160601c16911c6109c2565b42106101dc575050610175610b92565b608435811690816101c557610192915060a4359060443516610ee2565b61019e60c43533610ee2565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a98180a180f35b6101d79160a435916044351690610e79565b610192565b516337bf561360e11b8152fd5b50516348f5c3ed60e01b8152fd5b90506020813d602011610225575b816102126020938361098a565b81010312610221575138610147565b8580fd5b3d9150610205565b83513d88823e3d90fd5b8380fd5b9150913461023757610100366003190112610237576001600160a01b0392606435841633036101e9576101659060e43563ffffffff81851c16911c6109c2565b90929150346102375761014036600319011261023757803592602435916001600160a01b039182841684036103b4576101003660431901126103b4578260a4351633036103a5576101243580911c9063ffffffff906102dc828216846109c2565b421061039557906102f19291871c16906109c2565b421015610387576103006109e5565b84865260208620606435036103795750917fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105939160209360c43516801560001461036757506103529060e43590610ee2565b61035f6101043533610ee2565b51908152a180f35b6103749160e43591610e79565b610352565b835163abab6bd760e01b8152fd5b83516337bf561360e11b8152fd5b86516337bf561360e11b81528490fd5b5083516348f5c3ed60e01b8152fd5b8680fd5b505050346100da57816003193601126100da576020905160018152f35b848483346104ca576101403660031901126104ca576001600160a01b03843581811692908390036104c657602435916101003660431901126102215760a4351633036104b6576104236109e5565b61012435901c7f00000000000000000000000000000000000000000000000000000000000000000142106104a6577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac9394508115600014610496576104888133610ee2565b82519182526020820152a180f35b6104a1813384610e79565b610488565b82516337bf561360e11b81528590fd5b83516348f5c3ed60e01b81528690fd5b8480fd5b8280fd5b8484346100da57816003193601126100da5780516020810191308352602082528082019382851067ffffffffffffffff8611176105145750602094508390525190208152f35b634e487b7160e01b815260418652602490fd5b505050346100da57816003193601126100da57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b929150346102375761057d36610962565b909390916001600160a01b0391906060840135831633036103a5578084013580911c9063ffffffff906105b2828216846109c2565b421061039557906105c79291871c16906109c2565b421015610387576105d783610d2d565b8486526020862060208401350361037957509161035f60c08360209560807fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171059896013516801560001461063b575061063360a082013533610ee2565b013533610ee2565b61064c9060a0830135903390610e79565b610633565b849250346104ca5761066236610962565b94909160018060a01b038251946370a0823160e01b865233838701526020958681602481867f0000000000000000000000000000000000000000000000000000000000000000165afa9081156107d057889161079f575b501561078f578088013580911c9063ffffffff906106db82828a1c16846109c2565b421061077f57906106f09291861c16906109c2565b42101561077057806060880135169161070888610d2d565b848752858720868901350361037957508661035f9260c09260807fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105999a013516801560001461076157506106339060a083013590610ee2565b61064c9160a084013591610e79565b5090516337bf561360e11b8152fd5b85516337bf561360e11b81528590fd5b83516348f5c3ed60e01b81528390fd5b90508681813d83116107c9575b6107b6818361098a565b810103126107c55751896106b9565b8780fd5b503d6107ac565b85513d8a823e3d90fd5b915091503461023757836003193601126102375730936060820182811067ffffffffffffffff82111761092c57845260288252602082019284368537602895865b610882576108748686866108596021845180946108496020830195601560fa1b87525180928585019061093f565b810103600181018552018361098a565b8251938492602084525180928160208601528585019061093f565b601f01601f19168101030190f35b600f811660309080820180921161091957600a9004602790818102918183041490151715610919576001600160f81b0319916108be91906109c2565b60f81b166000198801888111610919578551111561090657831a601f8886010153811c9580156108f35760001901958661081b565b634e487b7160e01b835260118252602483fd5b634e487b7160e01b845260328352602484fd5b634e487b7160e01b855260118452602485fd5b634e487b7160e01b825260418452602482fd5b60005b8381106109525750506000910152565b8181015183820152602001610942565b906101206003198301126109855761010060043592602319011261098557602490565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176109ac57604052565b634e487b7160e01b600052604160045260246000fd5b919082018092116109cf57565b634e487b7160e01b600052601160045260246000fd5b60443515610b435760643515610afe5760e43515610ab957604051631738921f60e21b8152602081600481305afa908115610aad57600091610a6f575b5015610a2a57565b60405162461bcd60e51b815260206004820152601f60248201527f54726f6e457363726f775372633a204e6f742054726f6e206e6574776f726b006044820152606490fd5b6020813d602011610aa5575b81610a886020938361098a565b810103126100da5751908115158203610aa2575038610a22565b80fd5b3d9150610a7b565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601d60248201527f54726f6e457363726f775372633a20496e76616c696420616d6f756e740000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f54726f6e457363726f775372633a20496e76616c696420686173686c6f636b006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f54726f6e457363726f775372633a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152608490fd5b6004803515610cdf5760243515610c9b5760a43515610c5757604051631738921f60e21b81526020818381305afa908115610aad57600091610c1c575b5015610bd85750565b60649060206040519162461bcd60e51b8352820152601f60248201527f54726f6e457363726f775372633a204e6f742054726f6e206e6574776f726b006044820152fd5b6020813d602011610c4f575b81610c356020938361098a565b810103126100da5751908115158203610aa2575038610bcf565b3d9150610c28565b60649060206040519162461bcd60e51b8352820152601d60248201527f54726f6e457363726f775372633a20496e76616c696420616d6f756e740000006044820152fd5b60649060206040519162461bcd60e51b8352820152601f60248201527f54726f6e457363726f775372633a20496e76616c696420686173686c6f636b006044820152fd5b60849060206040519162461bcd60e51b8352820152602160248201527f54726f6e457363726f775372633a20496e76616c6964206f72646572206861736044820152600d60fb1b6064820152fd5b803515610b43576020908181013515610e345760a0013515610df057604051631738921f60e21b81528181600481305afa908115610aad57600091610dba575b5015610d765750565b6064906040519062461bcd60e51b82526004820152601f60248201527f54726f6e457363726f775372633a204e6f742054726f6e206e6574776f726b006044820152fd5b8281813d8311610de9575b610dcf818361098a565b810103126100da5751908115158203610aa2575038610d6d565b503d610dc5565b6064906040519062461bcd60e51b82526004820152601d60248201527f54726f6e457363726f775372633a20496e76616c696420616d6f756e740000006044820152fd5b60405162461bcd60e51b815260048101839052601f60248201527f54726f6e457363726f775372633a20496e76616c696420686173686c6f636b006044820152606490fd5b9160446020926000926040519163a9059cbb60e01b83526004830152602482015282855af19081610ebf575b5015610ead57565b60405163fb7f507960e01b8152600490fd5b90503d15610eda5750600160005114601f3d11165b38610ea5565b3b1515610ed4565b60008080809481945af1903d15610f52573d9067ffffffffffffffff8211610f3e5760405191610f1c601f8201601f19166020018461098a565b825260203d92013e5b15610f2c57565b604051638a0332d560e01b8152600490fd5b634e487b7160e01b81526041600452602490fd5b50610f2556fea26469706673582212208d0bd962e91fada8cc29b41d3926c7fac7acaf2dfe7b84f32a91181ddc28372564736f6c63430008170033";

type TronEscrowFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TronEscrowFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TronEscrowFactory__factory extends ContractFactory {
  constructor(...args: TronEscrowFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    arg0: AddressLike,
    feeToken: AddressLike,
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelaySrc: BigNumberish,
    rescueDelayDst: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      arg0,
      feeToken,
      accessToken,
      owner,
      rescueDelaySrc,
      rescueDelayDst,
      overrides || {}
    );
  }
  override deploy(
    arg0: AddressLike,
    feeToken: AddressLike,
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelaySrc: BigNumberish,
    rescueDelayDst: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      arg0,
      feeToken,
      accessToken,
      owner,
      rescueDelaySrc,
      rescueDelayDst,
      overrides || {}
    ) as Promise<
      TronEscrowFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TronEscrowFactory__factory {
    return super.connect(runner) as TronEscrowFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TronEscrowFactoryInterface {
    return new Interface(_abi) as TronEscrowFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TronEscrowFactory {
    return new Contract(address, _abi, runner) as unknown as TronEscrowFactory;
  }
}
